<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.4">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="$'https://udenver.qualtrics.com/jfe/form/SV_a4qaGzutOwOjcPk?id='+expInfo['participant']" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': ''}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="https://du.sona-systems.com" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="packaged" valType="str" updates="None" name="JS libs"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="2022.2.4" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[0.5216,0.5216,0.5216]" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="cgeRDMtask" valType="str" updates="None" name="expName"/>
    <Param val="on Save" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="showSelectedOutcome">
      <TextComponent name="wrapUp">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="code" updates="constant" name="letterHeight"/>
        <Param val="wrapUp" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Randomly selected outcome from trial #&amp;#10;&amp;#10;The outcome on this trial was 555&amp;#10;&amp;#10;You will be paid 111&amp;#10;&amp;#10;When you are ready to exit, press enter." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="exitResp">
        <Param val="'return'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="exitResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="lossInstructions">
      <TextComponent name="lossInst">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="lossInst" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The next set of 20 trials will be identical to the previous trials, except:&amp;#10;&amp;#10;1) On each trial you will decide between a risky option with win&amp;#10; and loss possible outcomes, and a guaranteed alternative of \$0.&amp;#10;&amp;#10;2) These will be hypothetical trials, meaning that you&amp;#10; will not recieve the outcome from any of these trials.&amp;#10;&amp;#10;That said, we ask that you please make your&amp;#10; choices as if the monetary amounts were real.&amp;#10;&amp;#10;When you are done, you will be redirected&amp;#10; to the next task in this study.&amp;#10;&amp;#10;When you are ready to start, press &quot;V&quot; or &quot;N&quot;." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="startLossResp">
        <Param val="'v','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="startLossResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="lossTask">
      <CodeComponent name="randLoc_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (loc==1) {&amp;#10;    targetPos=[-.4,0];&amp;#10;} else {&amp;#10;    targetPos=[.4,0];&amp;#10;}&amp;#10;&amp;#10;if (loc==1) {&amp;#10;    lossLoc=[-.4,-.2];&amp;#10;    gainLoc=[-.4,.2];&amp;#10;    safeLoc=[.4,0];&amp;#10;} else {&amp;#10;    lossLoc=[.4,-.2];&amp;#10;    gainLoc=[.4,.2];&amp;#10;    safeLoc=[.4,0];&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if loc==1:&amp;#10;    targetPos=[-.4,0]&amp;#10;else:&amp;#10;    targetPos=[.4,0]&amp;#10;&amp;#10;if loc==1:&amp;#10;    lossLoc=[-.4,-.1]&amp;#10;    gainLoc=[-.4,.1]&amp;#10;    safeLoc=[.4,0]&amp;#10;else:&amp;#10;    lossLoc=[.4,-.1]&amp;#10;    gainLoc=[.4,.1]&amp;#10;    safeLoc=[-.4,0]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="randLoc_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="circleLeftReal_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="circleLeftReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-.4,0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(.5, .5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="circleRightReal_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1,1,1]" valType="str" updates="set every repeat" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[1,1,1]" valType="str" updates="set every repeat" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="circleRightReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(.4,0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="lineLeftReal_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[-1,-1,-1]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1,-1,-1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="3" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="lineLeftReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="targetPos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.5, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="orTextReal_2">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="orTextReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="OR" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="lossTxtReal_2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="lossTxtReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="lossLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$riskyLoss" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="gainTxtReal_2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="gainTxtReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="gainLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$riskyGain" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="safeTxtReal_2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="safeTxtReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="safeLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$alternative" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="vLeftReal_2">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="vLeftReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-.4, -.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="V-Left" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="nRightReal_2">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="nRightReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(.4, -.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="N-Right" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="realChoice_2">
        <Param val="'v','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="realChoice_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="isiLoss">
      <TextComponent name="isiLossText">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="isiLossText" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$isi" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="feedbackLoss">
      <CodeComponent name="codeFeedbackReal_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="function random_item(items){&amp;#10;return items[Math.floor(Math.random()*items.length)];&amp;#10;}&amp;#10;&amp;#10;if (realChoice.keys != 'n' || realChoice.keys !='v'){&amp;#10;    realOutcome = &quot; &quot;;&amp;#10;    noRespLoc = [0,0];&amp;#10;    ocLoc = [5,5];&amp;#10;    ocGambleLoc = [5,5];&amp;#10;    ocSafeLoc = [5,5];&amp;#10;    hideGamLoc = [5,5];&amp;#10;}else if(realChoice.keys =='v' &amp;&amp; loc ==1) {&amp;#10;    realOutcome = random_items([riskyGain, riskyLoss])&amp;#10;    if(realOutcome == riskyGain){&amp;#10;        ocLoc = [-.4,.1];&amp;#10;        ocGambleLoc = [-.4,0];&amp;#10;        ocSafeLoc = [5,5];&amp;#10;        noRespLoc = [5,5];&amp;#10;        hideGamLoc = [-.4,-.125];&amp;#10;    } else if (realOutcome ==riskyLoss){&amp;#10;        ocLoc = [-.4,-.1];&amp;#10;        ocGambleLoc = [-.4,0];&amp;#10;        ocSafeLoc = [5,5];&amp;#10;        hideGamLoc = [-.4,.125];&amp;#10;        noRespLoc = [5,5];&amp;#10;    }&amp;#10;} else if(realChoice.keys == 'v' &amp;&amp; loc ==2){&amp;#10;    realOutcome = alternative&amp;#10;    ocLoc = [-.4,0];&amp;#10;    ocGambleLoc = [5,5];&amp;#10;    ocSafeLoc = ocLoc;&amp;#10;    hideGamLoc = ocGambleLoc;&amp;#10;    noRespLoc = [5,5];&amp;#10;} else if (realChoice.keys=='n' &amp;&amp; loc ==1){&amp;#10;    realOutcome = alternative&amp;#10;    ocLoc = [.4,0];&amp;#10;    ocGambleLoc = [5,5];&amp;#10;    ocSafeLoc = ocLoc;&amp;#10;    hideGamLoc = ocGambleLoc;&amp;#10;    noRespLoc = [5,5];&amp;#10;} else if (realChoice.keys =='n' &amp;&amp; loc ==2){&amp;#10;    realOutcome = random_items([riskyGain, riskyLoss]);&amp;#10;    if (realOutcome == riskyGain){&amp;#10;        ocLoc = [.4,.1];&amp;#10;        ocGambleLoc = [.4,0];&amp;#10;        ocSafeLoc = [5,5];&amp;#10;        hideGamLoc = [.4,-.125];&amp;#10;        noRespLoc = [5,5];&amp;#10;    } else if (realOutcome == riskyLoss){&amp;#10;        ocLoc = [.4,-.1];&amp;#10;        ocGambleLoc = [.4,0];&amp;#10;        ocSafeLoc = [5,5];&amp;#10;        hideGamLoc = [.4,.125];&amp;#10;        noRespLoc = [5,5];&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random&amp;#10;if not realChoice.keys:&amp;#10;    realOutcome = &quot; &quot;&amp;#10;    noRespLoc = [0,0]&amp;#10;    ocLoc = [5,5]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = [5,5]&amp;#10;    hideGamLoc = [5,5]&amp;#10;elif realChoice.keys == 'v' and loc == 1:&amp;#10;    realOutcome = random.choice([riskyGain, riskyLoss])&amp;#10;    if realOutcome == riskyGain:&amp;#10;        ocLoc = [-.4,.1]&amp;#10;        ocGambleLoc = [-.4,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        noRespLoc = [5,5]&amp;#10;        hideGamLoc = [-.4,-.125]&amp;#10;    elif realOutcome == riskyLoss:&amp;#10;         ocLoc = [-.4,-.1]&amp;#10;         ocGambleLoc = [-.4,0]&amp;#10;         ocSafeLoc = [5,5]&amp;#10;         hideGamLoc = [-.4,.125]&amp;#10;         noRespLoc = [5,5]&amp;#10;elif realChoice.keys == 'v' and loc == 2:&amp;#10;    realOutcome = alternative&amp;#10;    ocLoc = [-.4,0]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = ocLoc&amp;#10;    hideGamLoc = ocGambleLoc&amp;#10;    noRespLoc = [5,5]&amp;#10;elif realChoice.keys == 'n' and loc ==1:&amp;#10;    realOutcome = alternative&amp;#10;    ocLoc = [.4,0]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = ocLoc&amp;#10;    hideGamLoc = ocGambleLoc&amp;#10;    noRespLoc = [5,5]&amp;#10;elif realChoice.keys == 'n' and loc ==2:&amp;#10;    realOutcome = random.choice([riskyGain, riskyLoss])&amp;#10;    if realOutcome == riskyGain:&amp;#10;        ocLoc = [.4,.1]&amp;#10;        ocGambleLoc = [.4,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        hideGamLoc = [.4,-.125]&amp;#10;        noRespLoc = [5,5]&amp;#10;    elif realOutcome == riskyLoss:&amp;#10;        ocLoc = [.4,-.1]&amp;#10;        ocGambleLoc = [.4,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        hideGamLoc = [.4,.125]&amp;#10;        noRespLoc = [5,5]&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData('realOutcome', realOutcome)  " valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('realOutcome', realOutcome)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="codeFeedbackReal_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="noRespTxtReal_2">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="noRespTxtReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="noRespLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You did not respond in time&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="ocGambleReal_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="ocGambleReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocGambleLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="ocSafeReal_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="ocSafeReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocSafeLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="outcomeTextReal_2">
        <Param val="black" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="outcomeTextReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$realOutcome" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="hideGambleReal_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[-1,-1,-1]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1,-1,-1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="hideGambleReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="hideGamLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.6, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="itiLoss">
      <TextComponent name="itiTextReal_2">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="itiTextReal_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="endOfTask">
      <TextComponent name="endRedirect">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="endRedirect" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="This part of the experiment is complete. &amp;#10;&amp;#10;Please click the mouse to move on. " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="mouse">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="any click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
    </Routine>
    <Routine name="testVariable">
      <TextComponent name="showGain">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val=".1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="showGain" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$riskyGainAmt" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="realTaskDynamic">
      <CodeComponent name="randLoc_dynamic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="loc = [];" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="loc = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;var gainLoc, loc, lossLoc, safeLoc, targetPos;&amp;#10;loc = random.choice([1, 2]);&amp;#10;if ((loc === 1)) {&amp;#10;    targetPos = [(- 0.4), 0];&amp;#10;} else {&amp;#10;    targetPos = [0.4, 0];&amp;#10;}&amp;#10;if ((loc === 1)) {&amp;#10;    lossLoc = [(- 0.4), (- 0.1)];&amp;#10;    gainLoc = [(- 0.4), 0.1];&amp;#10;    safeLoc = [0.4, 0];&amp;#10;} else {&amp;#10;    lossLoc = [0.4, (- 0.1)];&amp;#10;    gainLoc = [0.4, 0.1];&amp;#10;    safeLoc = [(- 0.4), 0];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random&amp;#10;&amp;#10;loc = random.choice([1,2])&amp;#10;&amp;#10;if loc==1:&amp;#10;    targetPos=[-.4,0]&amp;#10;else:&amp;#10;    targetPos=[.4,0]&amp;#10;&amp;#10;if loc==1:&amp;#10;    lossLoc=[-.4,-.1]&amp;#10;    gainLoc=[-.4,.1]&amp;#10;    safeLoc=[.4,0]&amp;#10;else:&amp;#10;    lossLoc=[.4,-.1]&amp;#10;    gainLoc=[.4,.1]&amp;#10;    safeLoc=[-.4,0]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;loc&quot;, loc);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData(&quot;loc&quot;, loc)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="randLoc_dynamic" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="circleLeftReal_dynamic">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="circleLeftReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-.4,0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(.5, .5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="circleRightReal_dynamic">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1,1,1]" valType="str" updates="set every repeat" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[1,1,1]" valType="str" updates="set every repeat" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="circleRightReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(.4,0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="lineLeftReal_dynamic">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[-1,-1,-1]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1,-1,-1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="3" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="lineLeftReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="targetPos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.5, 0.01)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="orTextReal_dynamic">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="orTextReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="OR" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="lossTxtReal_dynamic">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="lossTxtReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="lossLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$riskyoption2" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="gainTxtReal_dynamic">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="gainTxtReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="gainLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$riskyoption1" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="safeTxtReal_dynamic">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="safeTxtReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="safeLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$safeoption" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="vLeftReal_dynamic">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="vLeftReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-.4, -.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="V-Left" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="nRightReal_dynamic">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="nRightReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(.4, -.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="N-Right" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="realChoice_dynamic">
        <Param val="'v','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="realChoice_dynamic" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="isiRealDynamic">
      <TextComponent name="isiTextReal_dynamic">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="isiTextReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$isi" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="feedbackRealDynamic">
      <CodeComponent name="codeFeedbackReal_dynamic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#riskygain_values = []&amp;#10;#riskyloss_values = []&amp;#10;#certain_values = []&amp;#10;#choices = []&amp;#10;#outcomes = []&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;import * as math from 'math';&amp;#10;var choicetmp, hideGamLoc, noRespLoc, ocGambleLoc, ocLoc, ocSafeLoc, outcometmp;&amp;#10;if ((! realChoice_dynamic.keys)) {&amp;#10;    outcometmp = math.nan;&amp;#10;    choicetmp = math.nan;&amp;#10;    noRespLoc = [0, 0];&amp;#10;    ocLoc = [5, 5];&amp;#10;    ocGambleLoc = [5, 5];&amp;#10;    ocSafeLoc = [5, 5];&amp;#10;    hideGamLoc = [5, 5];&amp;#10;} else {&amp;#10;    if (((realChoice_dynamic.keys === &quot;v&quot;) &amp;&amp; (loc === 1))) {&amp;#10;        outcometmp = random.choice([riskyoption1, riskyoption2]);&amp;#10;        choicetmp = 1;&amp;#10;        if ((outcometmp === riskyoption1)) {&amp;#10;            ocLoc = [(- 0.4), 0.1];&amp;#10;            ocGambleLoc = [(- 0.4), 0];&amp;#10;            ocSafeLoc = [5, 5];&amp;#10;            noRespLoc = [5, 5];&amp;#10;            hideGamLoc = [(- 0.4), (- 0.125)];&amp;#10;        } else {&amp;#10;            if ((outcometmp === riskyoption2)) {&amp;#10;                ocLoc = [(- 0.4), (- 0.1)];&amp;#10;                ocGambleLoc = [(- 0.4), 0];&amp;#10;                ocSafeLoc = [5, 5];&amp;#10;                hideGamLoc = [(- 0.4), 0.125];&amp;#10;                noRespLoc = [5, 5];&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        if (((realChoice_dynamic.keys === &quot;v&quot;) &amp;&amp; (loc === 2))) {&amp;#10;            outcometmp = safeoption;&amp;#10;            choicetmp = 0;&amp;#10;            ocLoc = [(- 0.4), 0];&amp;#10;            ocGambleLoc = [5, 5];&amp;#10;            ocSafeLoc = ocLoc;&amp;#10;            hideGamLoc = ocGambleLoc;&amp;#10;            noRespLoc = [5, 5];&amp;#10;        } else {&amp;#10;            if (((realChoice_dynamic.keys === &quot;n&quot;) &amp;&amp; (loc === 1))) {&amp;#10;                outcometmp = safeoption;&amp;#10;                choicetmp = 0;&amp;#10;                ocLoc = [0.4, 0];&amp;#10;                ocGambleLoc = [5, 5];&amp;#10;                ocSafeLoc = ocLoc;&amp;#10;                hideGamLoc = ocGambleLoc;&amp;#10;                noRespLoc = [5, 5];&amp;#10;            } else {&amp;#10;                if (((realChoice_dynamic.keys === &quot;n&quot;) &amp;&amp; (loc === 2))) {&amp;#10;                    outcometmp = random.choice([riskyoption1, riskyoption2]);&amp;#10;                    choicetmp = 1;&amp;#10;                    if ((outcometmp === riskyoption1)) {&amp;#10;                        ocLoc = [0.4, 0.1];&amp;#10;                        ocGambleLoc = [0.4, 0];&amp;#10;                        ocSafeLoc = [5, 5];&amp;#10;                        hideGamLoc = [0.4, (- 0.125)];&amp;#10;                        noRespLoc = [5, 5];&amp;#10;                    } else {&amp;#10;                        if ((outcometmp === riskyoption2)) {&amp;#10;                            ocLoc = [0.4, (- 0.1)];&amp;#10;                            ocGambleLoc = [0.4, 0];&amp;#10;                            ocSafeLoc = [5, 5];&amp;#10;                            hideGamLoc = [0.4, 0.125];&amp;#10;                            noRespLoc = [5, 5];&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;outcomes.push(outcometmp);&amp;#10;choices.push(choicetmp);&amp;#10;riskyloss_values.push(riskyoption2);&amp;#10;riskygain_values.push(riskyoption1);&amp;#10;certain_values.push(safeoption);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random&amp;#10;import math&amp;#10;if not realChoice_dynamic.keys:&amp;#10;    outcometmp = math.nan&amp;#10;    choicetmp = math.nan&amp;#10;    noRespLoc = [0,0]&amp;#10;    ocLoc = [5,5]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = [5,5]&amp;#10;    hideGamLoc = [5,5]&amp;#10;elif realChoice_dynamic.keys == 'v' and loc == 1:&amp;#10;    outcometmp = random.choice([riskyoption1, riskyoption2])&amp;#10;    choicetmp = 1&amp;#10;    if outcometmp == riskyoption1:&amp;#10;        ocLoc = [-.4,.1]&amp;#10;        ocGambleLoc = [-.4,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        noRespLoc = [5,5]&amp;#10;        hideGamLoc = [-.4,-.125]&amp;#10;    elif outcometmp == riskyoption2:&amp;#10;         ocLoc = [-.4,-.1]&amp;#10;         ocGambleLoc = [-.4,0]&amp;#10;         ocSafeLoc = [5,5]&amp;#10;         hideGamLoc = [-.4,.125]&amp;#10;         noRespLoc = [5,5]&amp;#10;elif realChoice_dynamic.keys == 'v' and loc == 2:&amp;#10;    outcometmp = safeoption&amp;#10;    choicetmp = 0&amp;#10;    ocLoc = [-.4,0]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = ocLoc&amp;#10;    hideGamLoc = ocGambleLoc&amp;#10;    noRespLoc = [5,5]&amp;#10;elif realChoice_dynamic.keys == 'n' and loc ==1:&amp;#10;    outcometmp = safeoption&amp;#10;    choicetmp = 0&amp;#10;    ocLoc = [.4,0]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = ocLoc&amp;#10;    hideGamLoc = ocGambleLoc&amp;#10;    noRespLoc = [5,5]&amp;#10;elif realChoice_dynamic.keys == 'n' and loc ==2:&amp;#10;    outcometmp = random.choice([riskyoption1, riskyoption2])&amp;#10;    choicetmp = 1&amp;#10;    if outcometmp == riskyoption1:&amp;#10;        ocLoc = [.4,.1]&amp;#10;        ocGambleLoc = [.4,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        hideGamLoc = [.4,-.125]&amp;#10;        noRespLoc = [5,5]&amp;#10;    elif outcometmp == riskyoption2:&amp;#10;        ocLoc = [.4,-.1]&amp;#10;        ocGambleLoc = [.4,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        hideGamLoc = [.4,.125]&amp;#10;        noRespLoc = [5,5]&amp;#10;&amp;#10;outcomes.append(outcometmp)&amp;#10;choices.append(choicetmp)&amp;#10;riskyloss_values.append(riskyoption2)&amp;#10;riskygain_values.append(riskyoption1)&amp;#10;certain_values.append(safeoption)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="thisExp.addData('outcomes', outcomes)&amp;#10;thisExp.addData('choices', choices)" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;outcomes&quot;, outcomes);&amp;#10;psychoJS.experiment.addData(&quot;choices&quot;, choices);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="codeFeedbackReal_dynamic" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="noRespTxtReal_dynamic">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="noRespTxtReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="noRespLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You did not respond in time&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="ocGambleReal_dynamic">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="ocGambleReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocGambleLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="ocSafereal_dynamic">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="ocSafereal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocSafeLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="outcomeTextReal_dynamic">
        <Param val="black" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="outcomeTextReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$outcometmp" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="hideGambleReal_dynamic">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[-1,-1,-1]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1,-1,-1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="hideGambleReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="hideGamLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.6, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="itiReal_dynamic">
      <TextComponent name="itiTextReal_dynamic">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="itiTextReal_dynamic" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="SpanGeneralInstructions">
      <TextComponent name="GenInsText">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GenInsText" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="In this task you will be asked to memorize a series of numbers and recall them. &amp;#10;&amp;#10;You will do this twice, once recalling the numbers in the order as presented on the screen and once recalling the numbers in the reverse order as presented on the screen. &amp;#10;&amp;#10;There are 14 trials in each direction for a total of 28 trials. &amp;#10;&amp;#10;You will complete 2 practice sets prior to starting each round of this task.&amp;#10;&amp;#10;Press 'enter' to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="movealong">
        <Param val="'return'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="movealong" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="FSInstructions">
      <TextComponent name="FSGenInsText">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="FSGenInsText" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The practice for the forwards section of this task is up next.&amp;#10;&amp;#10;You will complete two practice trials, each with a list of 3 numbers. &amp;#10;&amp;#10;Type out your answer when &quot;Recall&quot; appears on the screen using the numbers at the top of the keyboard to type out the numbers in the order they were presented on the screen. &amp;#10;&amp;#10;DO NOT use spaces or any other symbols (ONLY enter numbers) when you type your answer, otherwise your answer will be counted as incorrect.&amp;#10;&amp;#10;For example, if the numbers displayed on the screen are 5 then 7, the correct response is 57.&amp;#10;&amp;#10;If you make a mistake you can use backspace to correct it.  &amp;#10;&amp;#10;Feedback will be provided.&amp;#10;&amp;#10;Press 'enter' to begin the practice." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="startPractice">
        <Param val="'return'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="startPractice" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ShowNumbersPractice">
      <CodeComponent name="code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="//console.log(digits)&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fixation_2">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="fixation_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="pres_text_practice">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="letterTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="pres_text_practice" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(digits)[DigitLoopPractice.thisN]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="RecallPractice">
      <TextComponent name="recall_txtPractice">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="recall_txtPractice" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Recall" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextboxComponent name="textboxPractice">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="letterTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="textboxPractice" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(None, None)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </TextboxComponent>
      <ImageComponent name="cont_buttonPractice">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="continue.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="cont_buttonPractice" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.4)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.07)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="code_3practice">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((textboxPractice.text === digits.toString())) {&amp;#10;    correct = 1;&amp;#10;    fbTxt = &quot;Correct!&quot;;&amp;#10;} else {&amp;#10;    correct = 0;&amp;#10;    fbTxt = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;correct&quot;, correct);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="#for r in range(len(digitsForTrial)):&amp;#10;#    digitsForTrial[r] = str(digitsForTrial[r])&amp;#10;&amp;#10;#digitsForTrial = ''.join(digitsForTrial)&amp;#10;&amp;#10;if textboxPractice.text == str(digits):&amp;#10;    correct = 1&amp;#10;    fbTxt = 'Correct!'&amp;#10;else:&amp;#10;    correct = 0&amp;#10;    fbTxt = 'Incorrect'&amp;#10;thisExp.addData('correct', correct)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3practice" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="mousePractice">
        <Param val="cont_buttonPractice" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mousePractice" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="final" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="JScodePractice">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="// this is a temporary fix to allow editable textbox to be used on several trials&amp;#10;textboxPractice.refresh()" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="JScodePractice" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="FeedbackPractice">
      <TextComponent name="feedbac_textPractice">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="feedbac_textPractice" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$fbTxt" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="StartRealFS">
      <TextComponent name="praccomplete">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="praccomplete" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Practice complete! &amp;#10;&amp;#10;You are about to begin the forwards section of this task. &amp;#10;&amp;#10;You will start with a list of 3 numbers. If you are able to correctly recall the list of numbers, you will continue to larger lists. &amp;#10;&amp;#10;DO NOT use spaces or any other symbols (ONLY enter numbers) when you type your answer, otherwise your answer will be counted as incorrect.&amp;#10;&amp;#10;Press 'enter' to start the task.&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="startFSreal">
        <Param val="'return'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="startFSreal" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="selectNumbers">
      <CodeComponent name="selectNumbersFS">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="numbersToChoose = [1,2,3,4,5,6,7,8,9];&amp;#10;minDigitFS = 3;&amp;#10;maxDigitFS = 16;&amp;#10;#minDigitBS = 2;&amp;#10;#maxDigitBS = 15;&amp;#10;nTrialsFS = 0;&amp;#10;#nTrialsBS = 0;&amp;#10;correct = [];&amp;#10;incorrectCount = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="var digitSpan, digitsForTrial, nTrialsFS, correctCount, incorrectCount;&amp;#10;&amp;#10;//nTrialsFS = 0;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="//import * as random from 'random';&amp;#10;var checkingNumbers, endN, singleNumber, startN, tmpFirst, tmpSecond, numbersToChoose, minDigitFS, maxDigitFS;&amp;#10;&amp;#10;numbersToChoose = [1, 2, 3, 4, 5, 6, 7, 8, 9];&amp;#10;minDigitFS = 3;&amp;#10;maxDigitFS = 16;&amp;#10;//correctCount = [];&amp;#10;//incorrectCount = 0;&amp;#10;&amp;#10;&amp;#10;function random_item(items){ &amp;#10;    return items[Math.floor(Math.random()*items.length)]; &amp;#10;}&amp;#10;&amp;#10;//nTrialsFS += 1;&amp;#10;//nTrialsFS = nTrialsFS+1;&amp;#10;&amp;#10;nTrialsFS = trialsFS.thisN&amp;#10;//console.log(&quot;nTrialsFS:&quot;, nTrialsFS)&amp;#10;&amp;#10;// make incorrect count 0 on the first trial&amp;#10;if (nTrialsFS === 0){&amp;#10;    incorrectCount = 0;&amp;#10;}&amp;#10;&amp;#10;if (correctCount === 0) {&amp;#10;    incorrectCount = incorrectCount + 1;&amp;#10;}&amp;#10;&amp;#10;//if ((nTrialsFS === 1)) {&amp;#10;if (nTrialsFS === 0) {&amp;#10;    digitSpan = minDigitFS;&amp;#10;} else if (nTrialsFS !== 0) {&amp;#10;    if (correctCount ===1) {&amp;#10;        digitSpan = (digitSpan +1)&amp;#10;        incorrectCount = 0;&amp;#10;    } else if (correctCount === 0 &amp;&amp; incorrectCount &lt; 2){&amp;#10;        digitSpan = digitSpan&amp;#10;    } else if (correctCount === 0 &amp;&amp; incorrectCount === 2){&amp;#10;        digitSpan = (digitSpan - 1);&amp;#10;        incorrectCount = 0;&amp;#10;    }      &amp;#10;}&amp;#10;&amp;#10;/*&amp;#10;console.log(&quot;digit span:&quot;,digitSpan)&amp;#10;console.log(&quot;correct count:&quot;, correctCount)&amp;#10;console.log(&quot;incorrectCount:&quot;, incorrectCount)&amp;#10;*/&amp;#10;&amp;#10;if ((digitSpan &lt; minDigitFS)) {&amp;#10;    digitSpan = minDigitFS;&amp;#10;}&amp;#10;&amp;#10;digitsForTrial = [];&amp;#10;while ((digitsForTrial.length &lt; digitSpan)) {&amp;#10;    if ((digitSpan &lt;= 9)) {&amp;#10;        singleNumber = random_item(numbersToChoose);&amp;#10;        if ((util.count(digitsForTrial, singleNumber) &lt; 1)) {&amp;#10;            digitsForTrial.push(singleNumber);&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((digitSpan &gt; 9)) {&amp;#10;            singleNumber = random_item(numbersToChoose);&amp;#10;            if (((digitsForTrial.length &lt; 9) &amp;&amp; (util.count(digitsForTrial, singleNumber) === 0))) {&amp;#10;                digitsForTrial.push(singleNumber);&amp;#10;            }&amp;#10;            if (((digitsForTrial.length &gt;= 9) &amp;&amp; (util.count(digitsForTrial, singleNumber) &lt; 2))) {&amp;#10;                digitsForTrial.push(singleNumber);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;checkingNumbers = true;&amp;#10;startN = 1;&amp;#10;endN = (digitsForTrial.length - 1);&amp;#10;while (checkingNumbers) {&amp;#10;    for (var n, _pj_c = 0, _pj_a = util.range(startN, endN), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        n = _pj_a[_pj_c];&amp;#10;        if (((digitsForTrial[n] === (digitsForTrial[(n - 1)] + 1)) &amp;&amp; (digitsForTrial[n] === (digitsForTrial[(n + 1)] - 1)))) {&amp;#10;            tmpFirst = digitsForTrial[n];&amp;#10;            tmpSecond = digitsForTrial[(n - 1)];&amp;#10;            digitsForTrial[n] = tmpSecond;&amp;#10;            digitsForTrial[(n - 1)] = tmpFirst;&amp;#10;        }&amp;#10;        if (((digitsForTrial[n] === (digitsForTrial[(n - 1)] - 1)) &amp;&amp; (digitsForTrial[n] === (digitsForTrial[(n + 1)] + 1)))) {&amp;#10;            tmpFirst = digitsForTrial[n];&amp;#10;            tmpSecond = digitsForTrial[(n - 1)];&amp;#10;            digitsForTrial[n] = tmpSecond;&amp;#10;            digitsForTrial[(n - 1)] = tmpFirst;&amp;#10;        }&amp;#10;    }&amp;#10;    checkingNumbers = false;&amp;#10;}&amp;#10;&amp;#10;//console.log(digitSpan)&amp;#10;//console.log(digitsForTrial)" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random&amp;#10;&amp;#10;nTrialsFS += 1;&amp;#10;&amp;#10;# set the digit span, always starts at 3 for nTrial =1&amp;#10;# if correct, go up one&amp;#10;# if incorrect (once) stay the same&amp;#10;# if incorrect (twice) go down one&amp;#10;if correct == 0:&amp;#10;    incorrectCount += 1&amp;#10;&amp;#10;if nTrialsFS ==1:&amp;#10;    digitSpan = minDigitFS&amp;#10;else:&amp;#10;    if correct ==1:&amp;#10;        digitSpan = digitSpan + 1&amp;#10;        incorrectCount = 0;&amp;#10;    elif correct ==0 and incorrectCount &lt;2:&amp;#10;        digitSpan = digitSpan&amp;#10;    elif correct ==0 and incorrectCount ==2:&amp;#10;        digitSpan = digitSpan-1&amp;#10;        incorrectCount = 0;&amp;#10;&amp;#10;if digitSpan &lt; minDigitFS:&amp;#10;    digitSpan = minDigitFS&amp;#10;&amp;#10;digitsForTrial = [];&amp;#10;&amp;#10;while len(digitsForTrial) &lt; digitSpan:&amp;#10;    if digitSpan &lt;= 9:&amp;#10;        singleNumber = random.choice(numbersToChoose)&amp;#10;        if digitsForTrial.count(singleNumber) &lt; 1:&amp;#10;            digitsForTrial.append(singleNumber)        &amp;#10;    elif digitSpan &gt; 9:&amp;#10;         singleNumber = random.choice(numbersToChoose)&amp;#10;        &amp;#10;         if len(digitsForTrial) &lt; 9 and digitsForTrial.count(singleNumber)==0:&amp;#10;             digitsForTrial.append(singleNumber)&amp;#10;        &amp;#10;         if len(digitsForTrial) &gt;= 9 and digitsForTrial.count(singleNumber)&lt;2:&amp;#10;             digitsForTrial.append(singleNumber)&amp;#10;             &amp;#10;# check that there is not more than two consecutive numbers (e.g. 1-2-3)&amp;#10;checkingNumbers = True&amp;#10;startN = 1&amp;#10;endN = len(digitsForTrial)-1&amp;#10;while checkingNumbers:&amp;#10;    for n in range(startN,endN):&amp;#10;        if digitsForTrial[n] == digitsForTrial[n-1] + 1 and digitsForTrial[n] == digitsForTrial[n+1] -1:&amp;#10;            tmpFirst = digitsForTrial[n]&amp;#10;            tmpSecond = digitsForTrial[n-1]&amp;#10;            digitsForTrial[n] = tmpSecond&amp;#10;            digitsForTrial[n-1] = tmpFirst&amp;#10;        &amp;#10;        if digitsForTrial[n] == digitsForTrial[n-1] - 1 and digitsForTrial[n] == digitsForTrial[n+1] +1:&amp;#10;            tmpFirst = digitsForTrial[n]&amp;#10;            tmpSecond = digitsForTrial[n-1]&amp;#10;            digitsForTrial[n] = tmpSecond&amp;#10;            digitsForTrial[n-1] = tmpFirst&amp;#10;            &amp;#10;    checkingNumbers = False&amp;#10;# if there are three consecutive numbers, swap the first and second numbers in the series" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="selectNumbersFS" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="ShowNumbers">
      <CodeComponent name="getTmpNumberCodeFS">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var tmpNumber&amp;#10;tmpNumber = digitsForTrial[digitLoop.thisN];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="tmpNumber = digitsForTrial[digitLoop.thisN]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;digitsForTrial&quot;, digitsForTrial);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData(&quot;digitsForTrial&quot;,digitsForTrial)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="getTmpNumberCodeFS" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fixation">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="fixation" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="presentation_text">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="letterTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="presentation_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$tmpNumber" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Recall">
      <TextComponent name="recall_txt">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="recall_txt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Recall" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextboxComponent name="textbox">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="letterTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(None, None)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </TextboxComponent>
      <ImageComponent name="cont_button">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="continue.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="cont_button" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.4)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.07)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="code_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="for (var r, _pj_c = 0, _pj_a = util.range(digitsForTrial.length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    r = _pj_a[_pj_c];&amp;#10;    digitsForTrial[r] = digitsForTrial[r].toString();&amp;#10;}&amp;#10;digitsForTrial = digitsForTrial.join(&quot;&quot;);&amp;#10;if ((textbox.text === digitsForTrial.toString())) {&amp;#10;    correctCount = 1;&amp;#10;    fbTxt = &quot;Correct!&quot;;&amp;#10;} else {&amp;#10;    correctCount = 0;&amp;#10;    fbTxt = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;correct&quot;, correctCount);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="for r in range(len(digitsForTrial)):&amp;#10;    digitsForTrial[r] = str(digitsForTrial[r])&amp;#10;&amp;#10;digitsForTrial = ''.join(digitsForTrial)&amp;#10;&amp;#10;if textbox.text == str(digitsForTrial):&amp;#10;    correct = 1&amp;#10;    fbTxt = 'Correct!'&amp;#10;else:&amp;#10;    correct = 0&amp;#10;    fbTxt = 'Incorrect'&amp;#10;thisExp.addData('correct', correct)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="mouse_3">
        <Param val="cont_button" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="final" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="JScode">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="// this is a temporary fix to allow editable textbox to be used on several trials&amp;#10;textbox.refresh()" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="JScode" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Feedback">
      <TextComponent name="feedback_text">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="feedback_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$fbTxt" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="InstructionsBS">
      <TextComponent name="BSGenInsText">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="BSGenInsText" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The practice for the backwards section of this task is up next.&amp;#10;&amp;#10;You will complete two practice trials, each with a list of 2 numbers. &amp;#10;&amp;#10;Type out your answer when &quot;Recall&quot; appears on the screen using the numbers at the top of the keyboard to type out the numbers in the REVERSE order they were presented on the screen. &amp;#10;&amp;#10;For example, if the numbers presented are 6 then 2, your response should be 26.&amp;#10;&amp;#10;Please DO NOT use spaces or any other symbols (ONLY enter numbers) when you type your answer, otherwise your answer will be counted as incorrect.&amp;#10;&amp;#10;If you make a mistake you can use backspace to correct it.  &amp;#10;&amp;#10;Feedback will be provided.&amp;#10;&amp;#10;Press 'enter' to begin the practice." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="startBSprac">
        <Param val="'return'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="startBSprac" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="showNumbersPracticeBS">
      <TextComponent name="fixation_3">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="fixation_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="pres_text_practice_2">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="letterTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="pres_text_practice_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(digitsReverse)[digitLoopPracticeBS.thisN]" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="recallPracticeBS">
      <TextComponent name="recall_txtPractice_2">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="recall_txtPractice_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Recall" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextboxComponent name="textboxPractice_2">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="letterTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="textboxPractice_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(None, None)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </TextboxComponent>
      <ImageComponent name="cont_buttonPractice_2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="continue.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="cont_buttonPractice_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.4)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.07)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="code_3practice_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((textboxPractice_2.text === digitsReverseCorrAnswer.toString())) {&amp;#10;    correct = 1;&amp;#10;    fbTxt = &quot;Correct!&quot;;&amp;#10;} else {&amp;#10;    correct = 0;&amp;#10;    fbTxt = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;correct&quot;, correct);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if textboxPractice_2.text == str(digitsReverseCorrAnswer):&amp;#10;    correct = 1&amp;#10;    fbTxt = 'Correct!'&amp;#10;else:&amp;#10;    correct = 0&amp;#10;    fbTxt = 'Incorrect'&amp;#10;thisExp.addData('correct', correct)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3practice_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="mousePractice_2">
        <Param val="cont_buttonPractice_2" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mousePractice_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="final" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="JScodePractice_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="// this is a temporary fix to allow editable textbox to be used on several trials&amp;#10;textboxPractice_2.refresh()" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="JScodePractice_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="feedbackPracticeBS">
      <TextComponent name="feedbac_textPractice_2">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="feedbac_textPractice_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$fbTxt" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="startRealBS">
      <TextComponent name="praccompleteBS">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="praccompleteBS" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Practice complete!&amp;#10;&amp;#10;You are about to begin the backwards section of this task. &amp;#10;&amp;#10;You will start with a list of 2 numbers. If you are able to correctly recall the list of numbers, you will continue to larger lists. &amp;#10;&amp;#10;DO NOT use spaces or any other symbols (ONLY enter numbers) when you type your answer, otherwise your answer will be counted as incorrect.&amp;#10;&amp;#10;Press 'enter' to start the task." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="startBSreal">
        <Param val="'return'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="startBSreal" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="selectNumbersBS">
      <CodeComponent name="selectNumbersBScode">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="numbersToChoose = [1,2,3,4,5,6,7,8,9];&amp;#10;minDigitBS = 2;&amp;#10;maxDigitBS = 15;&amp;#10;nTrialsBS = 0;&amp;#10;correct = [];&amp;#10;incorrectCount = 0;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="var nTrialsBS&amp;#10;&amp;#10;//nTrialsBS = 0;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="//import * as random from 'random';&amp;#10;var checkingNumbers,endN, singleNumber, startN, tmpFirst, tmpSecond, numbersToChoose, minDigitBS, maxDigitBS&amp;#10;&amp;#10;numbersToChoose = [1, 2, 3, 4, 5, 6, 7, 8, 9];&amp;#10;minDigitBS = 2;&amp;#10;maxDigitBS = 15;&amp;#10;//correct = [];&amp;#10;//incorrectCount = 0;&amp;#10;&amp;#10;function random_item(items){ &amp;#10;    return items[Math.floor(Math.random()*items.length)]; &amp;#10;}&amp;#10;&amp;#10;&amp;#10;&amp;#10;//nTrialsBS += 1;&amp;#10;nTrialsBS = trialsBS.thisN&amp;#10;//console.log(&quot;nTrialsBS:&quot;, nTrialsBS)&amp;#10;&amp;#10;// reset incorrect count on the first trial&amp;#10;if (nTrialsBS ===0) {&amp;#10;    incorrectCount = 0&amp;#10;    correctCount = Math.nan&amp;#10;}&amp;#10;&amp;#10;if (correctCount === 0) {&amp;#10;    incorrectCount = incorrectCount + 1;&amp;#10;}&amp;#10;&amp;#10;if (nTrialsBS === 0) {&amp;#10;    //correctCount = 0;&amp;#10;    digitSpan = minDigitBS;&amp;#10;} else if (nTrialsBS !==0){&amp;#10;    if (correctCount ===1){&amp;#10;        digitSpan = (digitSpan + 1);&amp;#10;        incorrectCount = 0;&amp;#10;    } else if (correctCount === 0 &amp;&amp; incorrectCount &lt; 2) {&amp;#10;        digitSpan = digitSpan;&amp;#10;    } else if (correctCount === 0 &amp;&amp; incorrectCount === 2) {&amp;#10;        digitSpan = (digitSpan - 1);&amp;#10;        incorrectCount = 0;&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;/*&amp;#10;console.log(&quot;digit span:&quot;,digitSpan)&amp;#10;console.log(&quot;correct count:&quot;, correctCount)&amp;#10;console.log(&quot;incorrectCount:&quot;, incorrectCount)&amp;#10;*/&amp;#10;&amp;#10;if (digitSpan &lt; minDigitBS) {&amp;#10;    digitSpan = minDigitBS;&amp;#10;}&amp;#10;&amp;#10;digitsForTrial = [];&amp;#10;while ((digitsForTrial.length &lt; digitSpan)) {&amp;#10;    if ((digitSpan &lt;= 9)) {&amp;#10;        singleNumber = random_item(numbersToChoose);&amp;#10;        if ((util.count(digitsForTrial, singleNumber) &lt; 1)) {&amp;#10;            digitsForTrial.push(singleNumber);&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((digitSpan &gt; 9)) {&amp;#10;            singleNumber = random_item(numbersToChoose);&amp;#10;            if (((digitsForTrial.length &lt; 9) &amp;&amp; (util.count(digitsForTrial, singleNumber) === 0))) {&amp;#10;                digitsForTrial.push(singleNumber);&amp;#10;            }&amp;#10;            if (((digitsForTrial.length &gt;= 9) &amp;&amp; (util.count(digitsForTrial, singleNumber) &lt; 2))) {&amp;#10;                digitsForTrial.push(singleNumber);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;checkingNumbers = true;&amp;#10;startN = 1;&amp;#10;endN = (digitsForTrial.length - 1);&amp;#10;while (checkingNumbers) {&amp;#10;    for (var n, _pj_c = 0, _pj_a = util.range(startN, endN), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        n = _pj_a[_pj_c];&amp;#10;        if (((digitsForTrial[n] === (digitsForTrial[(n - 1)] + 1)) &amp;&amp; (digitsForTrial[n] === (digitsForTrial[(n + 1)] - 1)))) {&amp;#10;            tmpFirst = digitsForTrial[n];&amp;#10;            tmpSecond = digitsForTrial[(n - 1)];&amp;#10;            digitsForTrial[n] = tmpSecond;&amp;#10;            digitsForTrial[(n - 1)] = tmpFirst;&amp;#10;        }&amp;#10;        if (((digitsForTrial[n] === (digitsForTrial[(n - 1)] - 1)) &amp;&amp; (digitsForTrial[n] === (digitsForTrial[(n + 1)] + 1)))) {&amp;#10;            tmpFirst = digitsForTrial[n];&amp;#10;            tmpSecond = digitsForTrial[(n - 1)];&amp;#10;            digitsForTrial[n] = tmpSecond;&amp;#10;            digitsForTrial[(n - 1)] = tmpFirst;&amp;#10;        }&amp;#10;    }&amp;#10;    checkingNumbers = false;&amp;#10;}&amp;#10;&amp;#10;//console.log(&quot;digitSpan:&quot;, digitSpan)&amp;#10;//console.log(&quot;digitSpan:&quot;, digitsForTrial)" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random&amp;#10;&amp;#10;nTrialsBS += 1;&amp;#10;&amp;#10;# set the digit span, always starts at 3 for nTrial =1&amp;#10;# if correct, go up one&amp;#10;# if incorrect (once) stay the same&amp;#10;# if incorrect (twice) go down one&amp;#10;if correct == 0:&amp;#10;    incorrectCount += 1&amp;#10;&amp;#10;if nTrialsBS ==1:&amp;#10;    correct = [];&amp;#10;    digitSpan = minDigitBS&amp;#10;else:&amp;#10;    if correct ==1:&amp;#10;        digitSpan = digitSpan + 1&amp;#10;        incorrectCount = 0;&amp;#10;    elif correct ==0 and incorrectCount &lt;2:&amp;#10;        digitSpan = digitSpan&amp;#10;    elif correct ==0 and incorrectCount ==2:&amp;#10;        digitSpan = digitSpan-1&amp;#10;        incorrectCount = 0;&amp;#10;&amp;#10;if digitSpan &lt; minDigitBS:&amp;#10;    digitSpan = minDigitBS&amp;#10;&amp;#10;digitsForTrial = [];&amp;#10;&amp;#10;while len(digitsForTrial) &lt; digitSpan:&amp;#10;    if digitSpan &lt;= 9:&amp;#10;        singleNumber = random.choice(numbersToChoose)&amp;#10;        if digitsForTrial.count(singleNumber) &lt; 1:&amp;#10;            digitsForTrial.append(singleNumber)        &amp;#10;    elif digitSpan &gt; 9:&amp;#10;         singleNumber = random.choice(numbersToChoose)&amp;#10;        &amp;#10;         if len(digitsForTrial) &lt; 9 and digitsForTrial.count(singleNumber)==0:&amp;#10;             digitsForTrial.append(singleNumber)&amp;#10;        &amp;#10;         if len(digitsForTrial) &gt;= 9 and digitsForTrial.count(singleNumber)&lt;2:&amp;#10;             digitsForTrial.append(singleNumber)&amp;#10;             &amp;#10;# check that there is not more than two consecutive numbers (e.g. 1-2-3)&amp;#10;checkingNumbers = True&amp;#10;startN = 1&amp;#10;endN = len(digitsForTrial)-1&amp;#10;while checkingNumbers:&amp;#10;    for n in range(startN,endN):&amp;#10;        if digitsForTrial[n] == digitsForTrial[n-1] + 1 and digitsForTrial[n] == digitsForTrial[n+1] -1:&amp;#10;            tmpFirst = digitsForTrial[n]&amp;#10;            tmpSecond = digitsForTrial[n-1]&amp;#10;            digitsForTrial[n] = tmpSecond&amp;#10;            digitsForTrial[n-1] = tmpFirst&amp;#10;        &amp;#10;        if digitsForTrial[n] == digitsForTrial[n-1] - 1 and digitsForTrial[n] == digitsForTrial[n+1] +1:&amp;#10;            tmpFirst = digitsForTrial[n]&amp;#10;            tmpSecond = digitsForTrial[n-1]&amp;#10;            digitsForTrial[n] = tmpSecond&amp;#10;            digitsForTrial[n-1] = tmpFirst&amp;#10;            &amp;#10;    checkingNumbers = False&amp;#10;# if there are three consecutive numbers, swap the first and second numbers in the series" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="selectNumbersBScode" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="showNumbersBS">
      <CodeComponent name="getTmpNumberCodeBS">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="tmpNumber = digitsForTrial[digitLoopBS.thisN];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="tmpNumber = digitsForTrial[digitLoopBS.thisN]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;digitsForTrial&quot;, digitsForTrial);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData(&quot;digitsForTrial&quot;,digitsForTrial)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="getTmpNumberCodeBS" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fixationBS">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="fixationBS" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="presentation_textBS">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="letterTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="presentation_textBS" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$tmpNumber" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="showNumbersBS_2">
      <CodeComponent name="getTmpNumberCodeBS_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="tmpNumber = digitsForTrial[digitLoopBS.thisN];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="tmpNumber = digitsForTrial[digitLoopBS.thisN]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;digitsForTrial&quot;, digitsForTrial);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData(&quot;digitsForTrial&quot;,digitsForTrial)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="getTmpNumberCodeBS_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fixationBS_2">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="fixationBS_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="presentation_textBS_2">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="presentation_textBS_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$tmpNumber" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="RecallBS">
      <TextComponent name="recall_txtBS">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="recall_txtBS" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Recall" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextboxComponent name="textboxBS">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="letterTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="textboxBS" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(None, None)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </TextboxComponent>
      <ImageComponent name="cont_buttonBS">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="continue.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="cont_buttonBS" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.4)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.07)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="code_3BS">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="function reversed(x) {&amp;#10;    var revList;&amp;#10;    revList = [];&amp;#10;    for (var i = 0, _pj_a = x.length; (i &lt; _pj_a); i += 1) {&amp;#10;        revList.push(x[((x.length - 1) - i)]);&amp;#10;    }&amp;#10;    return revList;&amp;#10;}&amp;#10;&amp;#10;digitsForTrial = reversed(digitsForTrial)&amp;#10;//console.log(&quot;reversed digits:&quot;, digitsForTrial)&amp;#10;&amp;#10;for (var r, _pj_c = 0, _pj_a = util.range(digitsForTrial.length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    r = _pj_a[_pj_c];&amp;#10;    digitsForTrial[r] = digitsForTrial[r].toString();&amp;#10;}&amp;#10;digitsForTrial = digitsForTrial.join(&quot;&quot;);&amp;#10;if ((textboxBS.text === digitsForTrial.toString())) {&amp;#10;    correctCount = 1;&amp;#10;    fbTxt = &quot;Correct!&quot;;&amp;#10;} else {&amp;#10;    correctCount = 0;&amp;#10;    fbTxt = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;correct&quot;, correctCount);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="digitsForTrial.reverse(); # reverse order for backward span&amp;#10;&amp;#10;for r in range(len(digitsForTrial)):&amp;#10;    digitsForTrial[r] = str(digitsForTrial[r])&amp;#10;&amp;#10;digitsForTrial = ''.join(digitsForTrial)&amp;#10;&amp;#10;if textboxBS.text == str(digitsForTrial):&amp;#10;    correct = 1&amp;#10;    fbTxt = 'Correct!'&amp;#10;else:&amp;#10;    correct = 0&amp;#10;    fbTxt = 'Incorrect'&amp;#10;thisExp.addData('correct', correct)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3BS" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="mouseBS">
        <Param val="cont_buttonBS" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouseBS" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="final" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="JScode_BS">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="// this is a temporary fix to allow editable textbox to be used on several trials&amp;#10;textbox.refresh()" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="JScode_BS" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="FeedbackBS">
      <TextComponent name="feedback_textBS">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="feedback_textBS" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$fbTxt" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="END">
      <TextComponent name="ThankYou">
        <Param val="$color2" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$instructionsFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="ThankYou" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="instructLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Thank you! You have sucessfully completed the second portion of this study.&amp;#10;&amp;#10;If you have not already done so, &amp;#10;please notify the experimenter with by pressing the white doorbell button." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="FStoBStransition">
      <TextComponent name="roundTransition">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="roundTransition" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The first round of the letter task is complete!&amp;#10;&amp;#10;Press &quot;enter&quot; to continue to the last round." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="moveToBS">
        <Param val="'return'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="moveToBS" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="SpanReminder1">
      <TextComponent name="Reminder1">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Reminder1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Your performance on this task does not affect your compensation. &amp;#10;&amp;#10;This task is supposed to be challenging - you are not expected to nor do you need to remember everything or get everything correct! &amp;#10;&amp;#10;Press 'enter' to continue. " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="movealong2">
        <Param val="'return'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="movealong2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="SpanReminder2">
      <TextComponent name="Reminder2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Reminder2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="We are interested in how many digits you can reliably and truthfully recall. &amp;#10;&amp;#10;Please do your best, and do not cheat (e.g. write down or photograph digits). Thank you for completing this task honestly!&amp;#10;&amp;#10;Press 'enter' to continue. " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="movealong3">
        <Param val="'return'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="movealong3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="pracISI">
      <TextComponent name="isiPracFix">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$fixCrossFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="FixCrossHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="isiPracFix" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="fixCrossLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$isi" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="pracOutcome">
      <CodeComponent name="pracOCcode">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="var outcome, noRespLoc, ocLoc, ocGambleLoc, ocSafeLoc, hideGamLoc, pracFeedbackRounded, extraITI;&amp;#10;&amp;#10;&amp;#10;&amp;#10;noRespLoc = [0,0]&amp;#10;ocLoc= [0,0]&amp;#10;ocGambleLoc = [0,0]&amp;#10;ocSafeLoc = [0,0]&amp;#10;hideGamLoc = [0,0]&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="function random_item(items){ &amp;#10;    return items[Math.floor(Math.random()*items.length)]; &amp;#10;}&amp;#10;&amp;#10;if (pracChoiceResp.keys === undefined){&amp;#10;    outcome = &quot; &quot;;&amp;#10;    noRespLoc = [0,0];&amp;#10;    ocLoc = [5,5];&amp;#10;    ocGambleLoc = [5,5];&amp;#10;    ocSafeLoc = [5,5];&amp;#10;    hideGamLoc = [5,5];&amp;#10;    extraITI = 0;&amp;#10;}else if(pracChoiceResp.keys =='v' &amp;&amp; loc ==1) {&amp;#10;    outcome = random_item([riskyGain, riskyLoss])&amp;#10;    extraITI = 4-pracChoiceResp.rt&amp;#10;    if(outcome == riskyGain){&amp;#10;        ocLoc = [-.35,.1];&amp;#10;        ocGambleLoc = [-.35,0];&amp;#10;        ocSafeLoc = [5,5];&amp;#10;        noRespLoc = [5,5];&amp;#10;        hideGamLoc = [-.35,-.125];&amp;#10;    } else if (outcome ==riskyLoss){&amp;#10;        ocLoc = [-.35,-.1];&amp;#10;        ocGambleLoc = [-.35,0];&amp;#10;        ocSafeLoc = [5,5];&amp;#10;        hideGamLoc = [-.35,.125];&amp;#10;        noRespLoc = [5,5];&amp;#10;    }&amp;#10;} else if(pracChoiceResp.keys == 'v' &amp;&amp; loc ==2){&amp;#10;    extraITI = 4-pracChoiceResp.rt&amp;#10;    outcome = alternative&amp;#10;    ocLoc = [-.35,0];&amp;#10;    ocGambleLoc = [5,5];&amp;#10;    ocSafeLoc = ocLoc;&amp;#10;    hideGamLoc = ocGambleLoc;&amp;#10;    noRespLoc = [5,5];&amp;#10;} else if (pracChoiceResp.keys=='n' &amp;&amp; loc ==1){&amp;#10;    extraITI = 4-pracChoiceResp.rt&amp;#10;    outcome = alternative&amp;#10;    ocLoc = [.35,0];&amp;#10;    ocGambleLoc = [5,5];&amp;#10;    ocSafeLoc = ocLoc;&amp;#10;    hideGamLoc = ocGambleLoc;&amp;#10;    noRespLoc = [5,5];&amp;#10;} else if (pracChoiceResp.keys =='n' &amp;&amp; loc ==2){&amp;#10;    outcome = random_item([riskyGain, riskyLoss]);&amp;#10;    extraITI = 4-pracChoiceResp.rt&amp;#10;    if (outcome == riskyGain){&amp;#10;        ocLoc = [.35,.1];&amp;#10;        ocGambleLoc = [.35,0];&amp;#10;        ocSafeLoc = [5,5];&amp;#10;        hideGamLoc = [.35,-.125];&amp;#10;        noRespLoc = [5,5];&amp;#10;    } else if (outcome == riskyLoss){&amp;#10;        ocLoc = [.35,-.1];&amp;#10;        ocGambleLoc = [.35,0];&amp;#10;        ocSafeLoc = [5,5];&amp;#10;        hideGamLoc = [.35,.125];&amp;#10;        noRespLoc = [5,5];&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;/*&amp;#10; function roundToTwo(num) {    &amp;#10;        return +(Math.round(num + &quot;e+2&quot;)  + &quot;e-2&quot;);&amp;#10; }&amp;#10;*/&amp;#10;&amp;#10;if (outcome == riskyLoss){&amp;#10;    //pracFeedbackRounded = $${Math.round(outcome)}&amp;#10;    pracFeedbackRounded = &quot;$&quot; + Math.round(outcome)&amp;#10;} else {&amp;#10;    //pracFeedbackRounded = $${Math.round(outcome*100)/100};&amp;#10;    //pracFeedbackRounded = &quot;$&quot; + Math.round(outcome*100)/100&amp;#10;    pracFeedbackRounded = &quot;$&quot; + (Math.round(outcome*100)/100).toFixed(2)&amp;#10;}&amp;#10;&amp;#10;//console.log(&quot;rounded feedback:&quot;,pracFeedbackRounded)&amp;#10;//console.log(&quot;extra ITI&quot;, extraITI)&amp;#10;//console.log(&quot;rt&quot;,choice1.rt)&amp;#10;//console.log(&quot;iti&quot;, iti)&amp;#10;//console.log(&quot;combined itis&quot;, extraITI + iti)&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random&amp;#10;import math&amp;#10;if not pracChoiceResp.keys:&amp;#10;    outcome = math.nan&amp;#10;    noRespLoc = [0,0]&amp;#10;    ocLoc = [5,5]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = [5,5]&amp;#10;    hideGamLoc = [5,5]&amp;#10;    extraITI = 0&amp;#10;elif pracChoiceResp.keys == 'v' and loc == 1:&amp;#10;    outcome = random.choice([riskyGain, riskyLoss])&amp;#10;    extraITI = 4-pracChoiceResp.rt&amp;#10;    if outcome == riskyGain:&amp;#10;        ocLoc = [-.35,.1]&amp;#10;        ocGambleLoc = [-.35,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        noRespLoc = [5,5]&amp;#10;        hideGamLoc = [-.35,-.15] #.125&amp;#10;    elif outcome == riskyLoss:&amp;#10;         ocLoc = [-.35,-.1]&amp;#10;         ocGambleLoc = [-.35,0]&amp;#10;         ocSafeLoc = [5,5]&amp;#10;         hideGamLoc = [-.35,.15]&amp;#10;         noRespLoc = [5,5]&amp;#10;elif pracChoiceResp.keys == 'v' and loc == 2:&amp;#10;    extraITI = 4-pracChoiceResp.rt&amp;#10;    outcome = alternative&amp;#10;    ocLoc = [-.35,0]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = ocLoc&amp;#10;    hideGamLoc = ocGambleLoc&amp;#10;    noRespLoc = [5,5]&amp;#10;elif pracChoiceResp.keys == 'n' and loc ==1:&amp;#10;    extraITI = 4-pracChoiceResp.rt&amp;#10;    outcome = alternative&amp;#10;    ocLoc = [.35,0]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = ocLoc&amp;#10;    hideGamLoc = ocGambleLoc&amp;#10;    noRespLoc = [5,5]&amp;#10;elif pracChoiceResp.keys == 'n' and loc ==2:&amp;#10;    outcome = random.choice([riskyGain, riskyLoss])&amp;#10;    extraITI = 4-pracChoiceResp.rt&amp;#10;    if outcome == riskyGain:&amp;#10;        ocLoc = [.35,.1]&amp;#10;        ocGambleLoc = [.35,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        hideGamLoc = [.35,-.15]&amp;#10;        noRespLoc = [5,5]&amp;#10;    elif outcome == riskyLoss:&amp;#10;        ocLoc = [.35,-.1]&amp;#10;        ocGambleLoc = [.35,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        hideGamLoc = [.35,.15]&amp;#10;        noRespLoc = [5,5]&amp;#10;&amp;#10;# $iti + extraITI was the original variable version of ITI&amp;#10;&amp;#10;if outcome == riskyLoss:&amp;#10;    pracFeedbackRounded = &quot;$%.0f&quot; % round(outcome,0)&amp;#10;else:&amp;#10;    pracFeedbackRounded = &quot;$%.2f&quot; % round(outcome,2)&amp;#10;    &amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData('outcome', outcome)&amp;#10;psychoJS.experiment.addData('extraITI', extraITI)" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('outcome', outcome)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="pracOCcode" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="pracNoRespTxt">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$NoRespFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="NoRespTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="pracNoRespTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="noRespLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You did not respond in time&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="pracRiskOC">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color2" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color2" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="pracRiskOC" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocGambleLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="circLeft" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="leftShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="pracSafeOC">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color2" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color2" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="pracSafeOC" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocSafeLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="circRight" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="rightShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="pracOCtxt">
        <Param val="$color1" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$ocFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="ocTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="pracOCtxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$pracFeedbackRounded" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="pracHideRisk">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color1" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color1" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="pracHideRisk" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="hideGamLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="riskHide" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="hideShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="pracITI">
      <TextComponent name="itiPracFix">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$fixCrossFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="FixCrossHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="itiPracFix" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="fixCrossLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$iti" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="staticStart">
      <TextComponent name="statStartTxt">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$instructionsFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="statStartTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="instructLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Practice complete.&amp;#10;&amp;#10;When you are ready to start ROUND 1 of the task, press &quot;V&quot; or &quot;N&quot;.&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="statStartResp">
        <Param val="'v','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="statStartResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="computeBestFit">
      <CodeComponent name="gridSearchCode">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import math&amp;#10;&amp;#10;### Function Definitions&amp;#10;&amp;#10;def choice_probability(parameters, riskyGv, riskyLv, certv):&amp;#10;    # Pull out parameters&amp;#10;    rho = parameters[0];&amp;#10;    mu = parameters[1];&amp;#10;    &amp;#10;    nTrials = len(riskyGv);&amp;#10;    &amp;#10;    # Calculate utility of the two options&amp;#10;    utility_riskygain_value = [math.pow(value, rho) for value in riskyGv];&amp;#10;    utility_riskyloss_value = [math.pow(value, rho) for value in riskyLv];&amp;#10;    utility_risky_option = [.5 * utility_riskygain_value[t] + .5 * utility_riskyloss_value[t] for t in range(nTrials)];&amp;#10;    utility_safe_option = [math.pow(value, rho) for value in certv]&amp;#10;    &amp;#10;    # Normalize values with div&amp;#10;    div = max(riskyGv)**rho;&amp;#10;    &amp;#10;    # Softmax&amp;#10;    p = [1/(1 + math.exp(-mu/div*(utility_risky_option[t] - utility_safe_option[t]))) for t in range(nTrials)];&amp;#10;    return p&amp;#10;&amp;#10;def negLLprospect_cgt(parameters, riskyGv, riskyLv, certv, choices):&amp;#10;    choiceP = choice_probability(parameters, riskyGv, riskyLv, certv);&amp;#10;    &amp;#10;    nTrials = len(choiceP);&amp;#10;    &amp;#10;    likelihood = [choices[t]*choiceP[t] + (1-choices[t])*(1-choiceP[t]) for t in range(nTrials)];&amp;#10;    zeroindex = [likelihood[t] == 0 for t in range(nTrials)];&amp;#10;    for ind in range(nTrials):&amp;#10;        if zeroindex[ind]:&amp;#10;            likelihood[ind] = 0.000000000000001;&amp;#10;    &amp;#10;    loglikelihood = [math.log(likelihood[t]) for t in range(nTrials)];&amp;#10;    &amp;#10;    nll = -sum(loglikelihood);&amp;#10;    return nll&amp;#10;&amp;#10;fname =[];&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="// Access the data from previous RDM task and save only the trials where participant responded on time&amp;#10;var pulledData, finiteChoices, finiteGainVals, finiteSafeVals, finiteLossVals&amp;#10;&amp;#10;pulledData = psychoJS.experiment._trialsData&amp;#10;//console.log(&quot;pulled data:&quot;, pulledData)&amp;#10;finiteData = pulledData.filter((trial) =&gt; (trial['realChoice.keys'] =='v' || trial['realChoice.keys'] =='n'));&amp;#10;//console.log(&quot;finite data:&quot;, finiteData)&amp;#10;finiteChoices = finiteData.map((trial) =&gt; trial['choices']);&amp;#10;finiteGainVals = finiteData.map((trial) =&gt; trial['riskyoption1']);&amp;#10;finiteLossVals = finiteData.map((trial) =&gt; trial['riskyoption2']);&amp;#10;finiteSafeVals = finiteData.map((trial) =&gt; trial['safeoption']);&amp;#10;&amp;#10;/*&amp;#10;console.log(&quot;finite choices:&quot;, finiteChoices)&amp;#10;console.log(&quot;finite gain values:&quot;, finiteGainVals)&amp;#10;console.log(&quot;finite loss values:&quot;, finiteLossVals)&amp;#10;console.log(&quot;finite safe values:&quot;,finiteSafeVals)&amp;#10;*/&amp;#10;&amp;#10;// Function Definitions&amp;#10;var fname, dynamicChoiceSetFilename;&amp;#10;&amp;#10;function choice_probability(parameters, riskyGv, riskyLv, certv) {&amp;#10;  var rho, mu, nTrials, div, utility_risky_option, utility_safe_option, p&amp;#10;  &amp;#10;  rho = parameters[0];&amp;#10;  mu = parameters[1];&amp;#10;&amp;#10;  nTrials = riskyGv.length;&amp;#10;&amp;#10;  div = Math.max.apply(Math,riskyGv) ** rho;&amp;#10;&amp;#10;  //utility_risky_option = [];&amp;#10;  //utility_safe_option = [];&amp;#10;  p = Array()&amp;#10;  &amp;#10;  for (let i = 0; i &lt; nTrials; i++){&amp;#10;    utility_risky_option = 0.5 * Math.pow(riskyGv[i],rho) + 0.5 * Math.pow(riskyLv[i],rho);&amp;#10;    utility_safe_option = Math.pow(certv[i],rho);&amp;#10;    &amp;#10;    //console.log(utility_risky_option)&amp;#10;    //console.log(utility_safe_option)&amp;#10;&amp;#10;    p[i] = 1/(1 + Math.exp(-mu/div*(utility_risky_option - utility_safe_option)))&amp;#10;    //p.push(1/(1 + Math.exp(-mu/div*(utility_risky_option - utility_safe_option))))&amp;#10;  }&amp;#10;  //console.log(p)&amp;#10;  return p&amp;#10;}&amp;#10;&amp;#10;&amp;#10;function negLLprospect_cgt(parameters, riskyGv, riskyLv, certv, choices, likelihood, negloglikelihood) {&amp;#10;  &amp;#10;  var choiceProb, nTrials, nll, likelihood, negloglikelihood&amp;#10;  &amp;#10;  choiceProb = choice_probability(parameters, riskyGv, riskyLv, certv);&amp;#10;  //console.log(&quot;choiceprob:&quot;, choiceProb)&amp;#10;&amp;#10;  nTrials = riskyGv.length;&amp;#10;&amp;#10;  likelihood = Array()&amp;#10;  negloglikelihood = Array()&amp;#10;  &amp;#10;  for (let t = 0; t &lt; nTrials; t++){&amp;#10;    likelihood[t] = choices[t]*choiceProb[t] + (1-choices[t])*(1-choiceProb[t]);&amp;#10;    if (likelihood[t] == 0){&amp;#10;      likelihood[t] = 0.000000000000001;&amp;#10;    }&amp;#10;    negloglikelihood[t] = -Math.log(likelihood[t]);&amp;#10;  }&amp;#10;&amp;#10;  nll = negloglikelihood.reduce((partialSum, a) =&gt; partialSum + a, 0);&amp;#10;&amp;#10;  return nll&amp;#10;}&amp;#10;&amp;#10;// Grid Search Code&amp;#10;&amp;#10;var bestM, bestR, best_nll_value, mmax, mmin, mstep, mu_values, n_mu_values, n_rho_values, nll_new, rho_values, rmax, rmin, rstep;&amp;#10;&amp;#10;n_rho_values = 200;&amp;#10;n_mu_values = 201;&amp;#10;&amp;#10;//console.log('n_rho_values', n_rho_values)&amp;#10;//console.log('n_mu_values', n_mu_values)&amp;#10;&amp;#10;rmin = 0.3&amp;#10;rmax = 2.2&amp;#10;rstep = (rmax - rmin)/(n_rho_values-1)&amp;#10;&amp;#10;/*&amp;#10;console.log('rmin', rmin)&amp;#10;console.log('rmax', rmax)&amp;#10;console.log('rstep', rstep)&amp;#10;*/&amp;#10;&amp;#10;mmin = 7&amp;#10;mmax = 80&amp;#10;mstep = (mmax - mmin)/(n_mu_values-1)&amp;#10;&amp;#10;/*&amp;#10;console.log('mmin', mmin)&amp;#10;console.log('mmax', mmax)&amp;#10;console.log('mstep', mstep)&amp;#10;*/&amp;#10;&amp;#10;rho_values = Array()&amp;#10;mu_values = Array()&amp;#10;&amp;#10;for (let r = 0; r &lt; n_rho_values; r++){  &amp;#10;  rho_values[r] = [rmin + r*rstep]; // creates the rho values&amp;#10;}&amp;#10;&amp;#10;for (let m = 0; m &lt; n_mu_values; m++){&amp;#10;  mu_values[m] = [mmin + m*mstep]; // creates the mu values&amp;#10;}&amp;#10;&amp;#10;best_nll_value = 1e10; // a preposterously bad first nll&amp;#10;&amp;#10;for (let r = 0; r &lt; n_rho_values; r++){&amp;#10;  for (let m = 0; m &lt; n_mu_values; m++){&amp;#10;    nll_new = negLLprospect_cgt([rho_values[r], mu_values[m]], finiteGainVals, finiteLossVals, finiteSafeVals, finiteChoices);&amp;#10;    if (nll_new &lt; best_nll_value) {&amp;#10;      best_nll_value = nll_new;&amp;#10;      bestR = r + 1; // +1 corrects for diff. in javascript vs. R indexing&amp;#10;      bestM = m + 1; // +1 corrects for diff. in javascript vs. R indexing&amp;#10;    }&amp;#10;  }&amp;#10;}&amp;#10;&amp;#10;// print indices of best-fitting parameter values + NLL&amp;#10;//console.log(&quot;The best R index is&quot;,bestR,&quot;while the best M index is&quot;,bestM,&quot;, with an NLL of&quot;,best_nll_value)&amp;#10;&amp;#10;var str_bestR, str_bestM&amp;#10;// Format the indices for good printing to filename&amp;#10;str_bestR = String(bestR);&amp;#10;if(str_bestR.length == 1){&amp;#10;  str_bestR = &quot;00&quot; + str_bestR;&amp;#10;} else if (str_bestR.length == 2) {&amp;#10;  str_bestR = &quot;0&quot; + str_bestR;&amp;#10;}&amp;#10;&amp;#10;str_bestM = String(bestM);&amp;#10;if(str_bestM.length == 1){&amp;#10;  str_bestM = &quot;00&quot; + str_bestM;&amp;#10;} else if (str_bestM.length == 2) {&amp;#10;  str_bestM = &quot;0&quot; + str_bestM;&amp;#10;}&amp;#10;&amp;#10;// The file name to use in part 2&amp;#10;fname = &quot;bespoke_choiceset_rhoInd&quot; + str_bestR + &quot;_muInd&quot; + str_bestM + &quot;.csv&quot;;&amp;#10;dynamicChoiceSetFilepath = &quot;bespoke_choicesets/&quot; + fname&amp;#10;//console.log(&quot;dynamic choiceset:&quot;, dynamicChoiceSetFilepath)&amp;#10;&amp;#10;// save information&amp;#10;psychoJS.experiment.addData(&quot;dynamicChoiceSetName&quot;, fname);&amp;#10;psychoJS.experiment.addData(&quot;dynamicChoiceSetPath&quot;, dynamicChoiceSetFilepath);&amp;#10;psychoJS.experiment.addData(&quot;bestRho&quot;,bestR)&amp;#10;psychoJS.experiment.addData(&quot;bestMu&quot;, bestM)" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;### Grid Search Code&amp;#10;import math &amp;#10;&amp;#10;# Prepare choice set values to remove any nans&amp;#10;finiteChoices = []&amp;#10;finiteGainVals = []&amp;#10;finiteSafeVals = []&amp;#10;finiteLossVals = []&amp;#10;&amp;#10;# just save trial things where participant responded&amp;#10;for t in range(len(choices)):&amp;#10;    if math.isfinite(choices[t]):&amp;#10;        finiteChoices.append(choices[t])&amp;#10;        finiteGainVals.append(riskygain_values[t])&amp;#10;        finiteSafeVals.append(certain_values[t])&amp;#10;        finiteLossVals.append(riskyloss_values[t])&amp;#10;&amp;#10;&amp;#10;# Prepare rho &amp; mu values&amp;#10;n_rho_values = 200;&amp;#10;n_mu_values = 201;&amp;#10;&amp;#10;rmin = 0.3&amp;#10;rmax = 2.2&amp;#10;rstep = (rmax - rmin)/(n_rho_values-1)&amp;#10;&amp;#10;mmin = 7&amp;#10;mmax = 80&amp;#10;mstep = (mmax - mmin)/(n_mu_values-1)&amp;#10;&amp;#10;rho_values = [];&amp;#10;mu_values = [];&amp;#10;&amp;#10;for r in range(n_rho_values):&amp;#10;    rho_values += [rmin + r*rstep];&amp;#10;&amp;#10;for m in range(n_mu_values):&amp;#10;    mu_values += [mmin + m*mstep];&amp;#10;&amp;#10;# Execute the grid search&amp;#10;best_nll_value = 1e10; # a preposterously bad first NLL&amp;#10;&amp;#10;for r in range(n_rho_values):&amp;#10;    for m in range(n_mu_values):&amp;#10;        nll_new = negLLprospect_cgt([rho_values[r], mu_values[m]], finiteGainVals, finiteLossVals, finiteSafeVals, finiteChoices);&amp;#10;        if nll_new &lt; best_nll_value:&amp;#10;            best_nll_value = nll_new;&amp;#10;            bestR = r + 1; # &quot;+1&quot; corrects for diff. in python vs. R indexing&amp;#10;            bestM = m + 1; # &quot;+1&quot; corrects for diff. in python vs. R indexing&amp;#10;&amp;#10;print('The best R index is', bestR, 'while the best M index is', bestM, ', with an NLL of', best_nll_value);&amp;#10;&amp;#10;fname.append(&quot;../CGE/bespoke_choicesets/bespoke_choiceset_rhoInd%03i_muInd%03i.csv&quot; % (bestR, bestM))&amp;#10;dynamicChoiceSetFilename = fname[0]&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="gridSearchCode" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <VariableComponent name="dynamicChoiceSet">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="dynamicChoiceSet" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="constant" name="saveEndExp"/>
        <Param val="True" valType="bool" updates="constant" name="saveEndRoutine"/>
        <Param val="never" valType="str" updates="constant" name="saveFrameValue"/>
        <Param val="False" valType="bool" updates="constant" name="saveStartExp"/>
        <Param val="True" valType="bool" updates="constant" name="saveStartRoutine"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="" valType="code" updates="constant" name="startExpValue"/>
        <Param val="" valType="code" updates="None" name="startFrameValue"/>
        <Param val="fname[0]" valType="code" updates="constant" name="startRoutineValue"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </VariableComponent>
      <VariableComponent name="bestRho">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="bestRho" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="constant" name="saveEndExp"/>
        <Param val="True" valType="bool" updates="constant" name="saveEndRoutine"/>
        <Param val="never" valType="str" updates="constant" name="saveFrameValue"/>
        <Param val="False" valType="bool" updates="constant" name="saveStartExp"/>
        <Param val="False" valType="bool" updates="constant" name="saveStartRoutine"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="" valType="code" updates="constant" name="startExpValue"/>
        <Param val="" valType="code" updates="None" name="startFrameValue"/>
        <Param val="bestR" valType="code" updates="constant" name="startRoutineValue"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </VariableComponent>
      <VariableComponent name="bestMu">
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="bestMu" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="constant" name="saveEndExp"/>
        <Param val="True" valType="bool" updates="constant" name="saveEndRoutine"/>
        <Param val="never" valType="str" updates="constant" name="saveFrameValue"/>
        <Param val="False" valType="bool" updates="constant" name="saveStartExp"/>
        <Param val="False" valType="bool" updates="constant" name="saveStartRoutine"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="" valType="code" updates="constant" name="startExpValue"/>
        <Param val="" valType="code" updates="None" name="startFrameValue"/>
        <Param val="bestM" valType="code" updates="constant" name="startRoutineValue"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </VariableComponent>
      <TextComponent name="setupBestFitTxt">
        <Param val="$color2" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$instructionsFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="setupBestFitTxt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="instructLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="ROUND 1 of the gambling task is complete! &amp;#10;&amp;#10;Setting up for the last round of the gambling task.&amp;#10;&amp;#10;Please wait...&amp;#10;&amp;#10;&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="loadDynamicChoiceSet">
      <CodeComponent name="loadDynamicCScode">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var pulledDataForDynamicRDM, dynamicChoicesetResource&amp;#10;&amp;#10;pulledDataForDynamicRDM = psychoJS.experiment._trialsData&amp;#10;//console.log(&quot;pulled data:&quot;, pulledDataForDynamicRDM)&amp;#10;&amp;#10;// just pull out the column of data that has the path and filename&amp;#10;getDynamicCSpath = pulledDataForDynamicRDM.map((trial) =&gt; trial['dynamicChoiceSetPath']);&amp;#10;getDynamicCSname = pulledDataForDynamicRDM.map((trial) =&gt; trial['dynamicChoiceSetName']);&amp;#10;&amp;#10;// print in console to make sure it worked&amp;#10;//console.log(&quot;pulled filepath vector:&quot;, getDynamicCSpath)&amp;#10;//console.log(&quot;pulled filename vector:&quot;, getDynamicCSname)&amp;#10;&amp;#10;// now just get the file name and file path (these are the last element in getchoicesetResource*&amp;#10;dynamicChoicesetResourceName = getDynamicCSname[getDynamicCSname.length -1]&amp;#10;dynamicChoicesetResourcePath = getDynamicCSpath[getDynamicCSpath.length -1]&amp;#10;&amp;#10;//console.log(&quot;pulled filename:&quot;, dynamicChoicesetResourceName)&amp;#10;//console.log(&quot;pulled filepath:&quot;, dynamicChoicesetResourcePath)&amp;#10;&amp;#10;psychoJS._serverManager.prepareResources([&amp;#10;  // relative path to index.html&amp;#10;  { name: dynamicChoicesetResourceName, path: dynamicChoicesetResourcePath},&amp;#10;]);&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="loadDynamicCScode" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="dynamicStart">
      <TextComponent name="dynaStartTxt">
        <Param val="$color2" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$instructionsFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="dynaStartTxt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="instructLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="When you are ready to start ROUND 2 of the task, press &quot;V&quot; or &quot;N&quot;." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="dynaStartResp">
        <Param val="'v', 'n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="dynaStartResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="SetUp">
      <CodeComponent name="setupCode">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="psychoJS.start({&amp;#10;  expName,&amp;#10;  expInfo,&amp;#10;  resources: [&amp;#10;    // relative path to index.html&amp;#10;    { name: 'digitSpanTrialNumber.xlsx', path: 'digitSpanTrialNumber.xlsx' },&amp;#10;    { name: 'CGT-choice-set.csv', path: 'CGT-choice-set.csv' },&amp;#10;    { name: 'cgtRDMPractice.xlsx', path: 'cgtRDMPractice.xlsx' },&amp;#10;    { name: 'continue.png', path: 'continue.png' },&amp;#10;    { name: 'digitSpanPractice.xlsx', path: 'digitSpanPractice.xlsx' },&amp;#10;    // absolute path:&amp;#10;    //{ name: 'trialTypes_B.xls', path: 'http://a.website.org/a.path/trialTypes_B.xls' }&amp;#10;  ]&amp;#10;});" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="### Dimensions&amp;#10;instructionsTextHeight = .05&amp;#10;lettersTextHeight = .1&amp;#10;wrap = 1.5&amp;#10;&amp;#10;### ITIs&amp;#10;initITIstatic = []&amp;#10;initITIdynamic = []&amp;#10;&amp;#10;### Isoluminant Colors Used &amp;#10;color1 = [0.5216,0.5216,0.5216]&amp;#10;color2 = [-0.0667,0.6392,1]&amp;#10;# BLUE ### Choice Shape; V, N, and OR text&amp;#10;# PsychoPy RGB -1:1 [-0.0667,0.6392,1] # RGB 0:255 [119,209,205]&amp;#10;# GREY ### Background; Choice Line&amp;#10;# psychopy RGB -1:1 [0.5216,0.5216,0.5216] # RGB 0:255 [194,194,194] &amp;#10;&amp;#10;### Shapes 'circle' 'rectangle' 'star.7' etc.&amp;#10;leftShape = 'circle'&amp;#10;rightShape = 'circle'&amp;#10;riskShape = 'rectangle'&amp;#10;hideShape = 'rectangle'&amp;#10;&amp;#10;### Fixed Practice Trial Locations&amp;#10;circLeftLoc=[-.35,0]&amp;#10;circRightLoc=[.35,0]&amp;#10;ORtextLoc=[0,0]&amp;#10;VleftLoc=[-.35,-.35]&amp;#10;NrightLoc=[.35,-.35]" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="instructionsTextHeight = 0.05;&amp;#10;lettersTextHeight = 0.1;&amp;#10;wrap = 1.5;&amp;#10;&amp;#10;var initITIstatic&amp;#10;var initITIdynamic&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="function shuffle(array) {&amp;#10;  let currentIndex = array.length,  randomIndex;&amp;#10;&amp;#10;  // While there remain elements to shuffle.&amp;#10;  while (currentIndex != 0) {&amp;#10;&amp;#10;    // Pick a remaining element.&amp;#10;    randomIndex = Math.floor(Math.random() * currentIndex);&amp;#10;    currentIndex--;&amp;#10;&amp;#10;    // And swap it with the current element.&amp;#10;    [array[currentIndex], array[randomIndex]] = [&amp;#10;      array[randomIndex], array[currentIndex]];&amp;#10;  }&amp;#10;&amp;#10;  return array;&amp;#10;}&amp;#10;&amp;#10;// initialize ITIs&amp;#10;initITIstatic = Array(25).fill([1, 1.5]).flat();&amp;#10;initITIdynamic = Array(60).fill([1, 1.5]).flat();&amp;#10;&amp;#10;// shuffle the ITIs using the function above&amp;#10;initITIstatic = shuffle(initITIstatic);&amp;#10;initITIdynamic = shuffle(initITIdynamic);&amp;#10;&amp;#10;// save the ITIs&amp;#10;psychoJS.experiment.addData('initITIstatic', initITIstatic)&amp;#10;psychoJS.experiment.addData('initITIdynamic', initITIdynamic)&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Getting random module&amp;#10;import random&amp;#10;&amp;#10;# Define the shuffle function (equivalent to the JavaScript version)&amp;#10;def shuffle(array):&amp;#10;    currentIndex = len(array)&amp;#10;    while currentIndex != 0:&amp;#10;        randomIndex = random.randint(0, currentIndex - 1)&amp;#10;        currentIndex -= 1&amp;#10;        array[currentIndex], array[randomIndex] = array[randomIndex], array[currentIndex]&amp;#10;&amp;#10;# Initialize ITIs&amp;#10;initITIstatic = [3, 3.5] * 25 #1, 1.5&amp;#10;initITIdynamic = [3, 3.5] * 60 #1, 1.5&amp;#10;&amp;#10;# Shuffle the ITIs using the shuffle function&amp;#10;shuffle(initITIstatic)&amp;#10;shuffle(initITIdynamic)&amp;#10;&amp;#10;# Save the ITIs as experiment data&amp;#10;thisExp.addData('initITIstatic', initITIstatic)&amp;#10;thisExp.addData('initITIdynamic', initITIdynamic)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="setupCode" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="cgeRDMend">
      <TextComponent name="cgeRDMendTxt">
        <Param val="$color2" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$instructionsFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="cgeRDMendTxt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="instructLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You have sucessfully completed the first task in this experiment!&amp;#10;&amp;#10;Please take a brief 1 minute break. &amp;#10;&amp;#10;You are welcome to take a longer break, but keep in mind this study should take no longer than 1 hour to complete. &amp;#10;&amp;#10;When you are ready to move on, press 'enter' to continue.&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="cgeRDMendResp">
        <Param val="'return'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="cgeRDMendResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="loadingDynamicChoices">
      <TextComponent name="loadDynaChoicesTxt">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="loadDynaChoicesTxt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ResourceManagerComponent name="loadDynaChoices">
        <Param val="Start and Check" valType="str" updates="None" name="actionType"/>
        <Param val="True" valType="bool" updates="None" name="checkAll"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="loadDynaChoices" valType="code" updates="None" name="name"/>
        <Param val="['$fname[0]']" valType="list" updates="constant" name="resources"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
      </ResourceManagerComponent>
    </Routine>
    <Routine name="realISI">
      <TextComponent name="isiRealFix">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$fixCrossFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="FixCrossHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="isiRealFix" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="fixCrossLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="realITI">
      <TextComponent name="itiRealFix">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$fixCrossFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="FixCrossHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="itiRealFix" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="fixCrossLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$actualITI" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="cgeRDMstart">
      <TextComponent name="cgeRDMstartTxt">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$instructionsFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="cgeRDMstartTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="instructLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="As discussed in the instructions, you will choose between a gamble and a guaranteed alternative.&amp;#10;&amp;#10;You may press &quot;V&quot; to select the option on the left and &quot;N&quot; to select the option on the right.&amp;#10;&amp;#10;Press &quot;enter&quot; to move on to the next screen." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="cgeRDMstartResp">
        <Param val="&quot;return&quot;" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="cgeRDMstartResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="pracChoices">
      <CodeComponent name="pracChoiceRandLoc">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="textHeight = 0.05;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var pracLossRounded, pracGainRounded, pracSafeRounded&amp;#10;&amp;#10;if ((loc === 1)) {&amp;#10;    targetPos = [(- 0.35), 0];&amp;#10;} else {&amp;#10;    targetPos = [0.35, 0];&amp;#10;}&amp;#10;if ((loc === 1)) {&amp;#10;    lossLoc = [(- 0.35), (- 0.1)];&amp;#10;    gainLoc = [(- 0.35), 0.1];&amp;#10;    safeLoc = [0.35, 0];&amp;#10;} else {&amp;#10;    lossLoc = [0.35, (- 0.1)];&amp;#10;    gainLoc = [0.35, 0.1];&amp;#10;    safeLoc = [(- 0.35), 0];&amp;#10;}&amp;#10;&amp;#10;&amp;#10;//pracLossRounded = riskyLoss&amp;#10;//pracGainRounded = riskyGain&amp;#10;//pracSafeRounded = alternative&amp;#10;&amp;#10;/*&amp;#10; function roundToTwo(num) {    &amp;#10;        return +(Math.round(num + &quot;e+2&quot;)  + &quot;e-2&quot;);&amp;#10; }&amp;#10;*/&amp;#10;&amp;#10;pracLossRounded = `$${Math.round(riskyLoss)}`;&amp;#10;//pracGainRounded = `$${roundToTwo(riskyGain*100)/100}`;&amp;#10;//pracSafeRounded = `$${roundToTwo(alternative*100)/100}`;&amp;#10;&amp;#10;pracGainRounded = `$${Math.round(riskyGain*100)/100}`;&amp;#10;pracSafeRounded = `$${Math.round(alternative*100)/100}`;&amp;#10;&amp;#10;//console.log(pracLossRounded)&amp;#10;//console.log(pracGainRounded)&amp;#10;//console.log(pracSafeRounded)" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Randomized Practice Trial Locations&amp;#10;if loc==1:&amp;#10;    riskLineLoc=[-.35,0] #targetPos&amp;#10;else:&amp;#10;    riskLineLoc=[.35,0] #targetPos&amp;#10;&amp;#10;if loc==1:&amp;#10;    lossLoc=[-.35,-.1]&amp;#10;    gainLoc=[-.35,.1]&amp;#10;    safeLoc=[.35,0]&amp;#10;else:&amp;#10;    lossLoc=[.35,-.1]&amp;#10;    gainLoc=[.35,.1]&amp;#10;    safeLoc=[-.35,0]&amp;#10;&amp;#10;# Rounding Presentation of Monetary Values    &amp;#10;pracLossRounded = '$%.0f' % round(riskyLoss,0)&amp;#10;pracGainRounded = '$%.2f' % round(riskyGain,2)&amp;#10;pracSafeRounded = '$%.2f' % round(alternative,2)&amp;#10;&amp;#10;pracNum = practiceTrials.thisN + 1&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="pracChoiceRandLoc" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="pracCircLeft">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color2" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color2" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="leftShape" valType="int" updates="constant" name="nVertices"/>
        <Param val="pracCircLeft" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="circLeftLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="circLeft" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="leftShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="pracCircRight">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color2" valType="str" updates="set every repeat" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color2" valType="str" updates="set every repeat" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="rightShape" valType="int" updates="constant" name="nVertices"/>
        <Param val="pracCircRight" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="circRightLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="circRight" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="rightShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="pracRiskLine">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color1" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color1" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="3" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="pracRiskLine" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="riskLineLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="riskLine" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="riskShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="pracORtxt">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="pracORtxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ORtextLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="OR" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="pracTriNum">
        <Param val="$trialNumColor" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$trialNumFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="trialNumHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="pracTriNum" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="trialNumLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$pracNum" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="pracLossTxt">
        <Param val="$color1" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceValueFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceValuesTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="pracLossTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="lossLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$pracLossRounded&amp;#10;&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="pracGainTxt">
        <Param val="$color1" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceValueFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceValuesTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="pracGainTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="gainLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$pracGainRounded" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="pracSafeTxt">
        <Param val="$color1" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceValueFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceValuesTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="pracSafeTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="safeLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$pracSafeRounded" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="pracVleft">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="pracVleft" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="VleftLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="V-Left" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="pracNright">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="pracNright" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="NrightLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="N-Right" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="pracChoiceResp">
        <Param val="'v','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="pracChoiceResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="realChoices">
      <CodeComponent name="realChoiceRandLoc">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="loc = []&amp;#10;staticTrials = []&amp;#10;# primarily for displaying trial number during dynamic trials because this code section gets called before actual dynamic trials&amp;#10;dynamicTrials = [] &amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="var realloc" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var gainLoc, gainRounded, lossLoc, lossRounded, safeLoc, safeRounded, targetPos;&amp;#10;&amp;#10;function random_item(items){ &amp;#10;    return items[Math.floor(Math.random()*items.length)]; &amp;#10;}&amp;#10;&amp;#10;realloc = random_item([1, 2]);&amp;#10;&amp;#10;if ((realloc === 1)) {&amp;#10;    targetPos = [(- 0.35), 0];&amp;#10;} else {&amp;#10;    targetPos = [0.35, 0];&amp;#10;}&amp;#10;if ((realloc === 1)) {&amp;#10;    lossLoc = [(- 0.35), (- 0.1)];&amp;#10;    gainLoc = [(- 0.35), 0.1];&amp;#10;    safeLoc = [0.35, 0];&amp;#10;} else {&amp;#10;    lossLoc = [0.35, (- 0.1)];&amp;#10;    gainLoc = [0.35, 0.1];&amp;#10;    safeLoc = [(- 0.35), 0];&amp;#10;}&amp;#10;&amp;#10;//console.log(realloc)&amp;#10;&amp;#10;/*&amp;#10; function roundToTwo(num) {    &amp;#10;        return +(Math.round(num + &quot;e+2&quot;)  + &quot;e-2&quot;);&amp;#10; }&amp;#10;*/&amp;#10;&amp;#10;lossRounded = `$${Math.round(riskyoption2)}`;&amp;#10;gainRounded = `$${(Math.round(riskyoption1*100)/100).toFixed(2)}`;&amp;#10;safeRounded = `$${(Math.round(safeoption*100)/100).toFixed(2)}`;&amp;#10;&amp;#10;//lossRounded = `$${Math.round(riskyoption2)}`;&amp;#10;//gainRounded = `$${Math.round(riskyoption1*100)/100}`;&amp;#10;//safeRounded = `$${Math.round(safeoption*100)/100}`;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="### Randomized Practice Trial Locations&amp;#10;import random&amp;#10;loc = random.choice([1,2])&amp;#10;&amp;#10;if loc==1:&amp;#10;    riskLineLoc=[-.35,0] #targetPos&amp;#10;else:&amp;#10;    riskLineLoc=[.35,0] #targetPos&amp;#10;&amp;#10;if loc==1:&amp;#10;    lossLoc=[-.35,-.1]&amp;#10;    gainLoc=[-.35,.1]&amp;#10;    safeLoc=[.35,0]&amp;#10;else:&amp;#10;    lossLoc=[.35,-.1]&amp;#10;    gainLoc=[.35,.1]&amp;#10;    safeLoc=[-.35,0]&amp;#10;&amp;#10;lossRounded = &quot;$%.0f&quot; % round(riskyoption2,0)&amp;#10;gainRounded = &quot;$%.2f&quot; % round(riskyoption1,2)&amp;#10;safeRounded = &quot;$%.2f&quot; % round(safeoption,2)&amp;#10;&amp;#10;#lossRounded = (&quot;$&quot; + str(round(riskyoption2, 2)))&amp;#10;#gainRounded = (&quot;$&quot; + str(round(riskyoption1, 2)))&amp;#10;#safeRounded = (&quot;$&quot; + str(round(safeoption, 2)))&amp;#10;&amp;#10;if staticTrials:&amp;#10;    realNum = staticTrials.thisN + 1&amp;#10;    &amp;#10;if dynamicTrials:&amp;#10;    realNum = dynamicTrials.thisN + 1&amp;#10;    &amp;#10;    &amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;realloc&quot;, realloc);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData(&quot;loc&quot;, loc)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="realChoiceRandLoc" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="realCircLeft">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color2" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color2" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="realCircLeft" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="circLeftLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="circLeft" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="leftShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="realCircRight">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color2" valType="str" updates="set every repeat" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color2" valType="str" updates="set every repeat" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="realCircRight" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="circRightLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="circRight" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="rightShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="realRiskLine">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color1" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color1" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="3" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="realRiskLine" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="riskLineLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="riskLine" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="riskShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="realORtxt">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="realORtxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ORtextLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="OR" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="realPracNum">
        <Param val="$trialNumColor" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="$trialNumFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="trialNumHeight" valType="num" updates="constant" name="letterHeight"/>
        <Param val="realPracNum" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="trialNumLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$realNum" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="realLossTxt">
        <Param val="$color1" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceValueFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceValuesTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="realLossTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="lossLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$lossRounded" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="realGainTxt">
        <Param val="$color1" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceValueFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceValuesTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="realGainTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="gainLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$gainRounded" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="realSafeTxt">
        <Param val="$color1" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceValueFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceValuesTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="realSafeTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="safeLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$safeRounded" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="realVleft">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="realVleft" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="VleftLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="V-Left" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="realNright">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$choiceFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="choiceTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="realNright" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="NrightLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="N-Right" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="realChoiceResp">
        <Param val="'v','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="realChoiceResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="statOutcome">
      <CodeComponent name="statOCcode">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="actualITI = []&amp;#10;riskygain_values = []&amp;#10;riskyloss_values = []&amp;#10;certain_values = []&amp;#10;choices = []&amp;#10;outcomes = []&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="var actualITI&amp;#10;choices= []&amp;#10;outcomes = []&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var choicetmp, feedbackRounded, outcometmp, outcomes, choices;&amp;#10;&amp;#10;&amp;#10;function random_item(items){ &amp;#10;    return items[Math.floor(Math.random()*items.length)]; &amp;#10;}&amp;#10;&amp;#10;if (realChoiceResp.keys === undefined) {&amp;#10;    outcometmp = Math.nan;&amp;#10;    choicetmp = Math.nan;&amp;#10;    noRespLoc = [0, 0];&amp;#10;    ocLoc = [5, 5];&amp;#10;    ocGambleLoc = [5, 5];&amp;#10;    ocSafeLoc = [5, 5];&amp;#10;    hideGamLoc = [5, 5];&amp;#10;    extraITI = 0;&amp;#10;} else if (realChoiceResp.keys === &quot;v&quot; &amp;&amp; realloc === 1) {&amp;#10;     outcometmp = random_item([riskyoption1, riskyoption2]);&amp;#10;     choicetmp = 1;&amp;#10;     extraITI = 4-realChoiceResp.rt&amp;#10;     if (outcometmp === riskyoption1) {&amp;#10;          ocLoc = [(- 0.35), 0.1];&amp;#10;          ocGambleLoc = [(- 0.35), 0];&amp;#10;          ocSafeLoc = [5, 5];&amp;#10;          noRespLoc = [5, 5];&amp;#10;          hideGamLoc = [(- 0.35), (- 0.125)];&amp;#10;     } else if (outcometmp === riskyoption2) {&amp;#10;          ocLoc = [(- 0.35), (- 0.1)];&amp;#10;          ocGambleLoc = [(- 0.35), 0];&amp;#10;          ocSafeLoc = [5, 5];&amp;#10;          hideGamLoc = [(- 0.35), 0.125];&amp;#10;          noRespLoc = [5, 5];&amp;#10;     }&amp;#10; } else if (realChoiceResp.keys === &quot;v&quot; &amp;&amp; realloc === 2) {&amp;#10;     outcometmp = safeoption;&amp;#10;     choicetmp = 0;&amp;#10;     extraITI = 4-realChoiceResp.rt&amp;#10;     ocLoc = [(- 0.35), 0];&amp;#10;     ocGambleLoc = [5, 5];&amp;#10;     ocSafeLoc = ocLoc;&amp;#10;     hideGamLoc = ocGambleLoc;&amp;#10;     noRespLoc = [5, 5];&amp;#10; } else if (realChoiceResp.keys === &quot;n&quot; &amp;&amp; realloc === 1) {&amp;#10;     outcometmp = safeoption;&amp;#10;     choicetmp = 0;&amp;#10;     extraITI = 4-realChoiceResp.rt&amp;#10;     ocLoc = [0.35, 0];&amp;#10;     ocGambleLoc = [5, 5];&amp;#10;     ocSafeLoc = ocLoc;&amp;#10;     hideGamLoc = ocGambleLoc;&amp;#10;     noRespLoc = [5, 5];&amp;#10;} else if (realChoiceResp.keys === &quot;n&quot; &amp;&amp; realloc === 2) {&amp;#10;    outcometmp = random_item([riskyoption1, riskyoption2]);&amp;#10;    choicetmp = 1;&amp;#10;    extraITI = 4-realChoiceResp.rt&amp;#10;    if (outcometmp === riskyoption1) {&amp;#10;        ocLoc = [0.35, 0.1];&amp;#10;        ocGambleLoc = [0.35, 0];&amp;#10;        ocSafeLoc = [5, 5];&amp;#10;        hideGamLoc = [0.35, (- 0.125)];&amp;#10;        noRespLoc = [5, 5];&amp;#10;    } else if (outcometmp === riskyoption2) {&amp;#10;        ocLoc = [0.35, (- 0.1)];&amp;#10;        ocGambleLoc = [0.35, 0];&amp;#10;        ocSafeLoc = [5, 5];&amp;#10;        hideGamLoc = [0.35, 0.125];&amp;#10;        noRespLoc = [5, 5];&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;actualITI = initITIstatic[staticTrials.thisN] + extraITI&amp;#10;&amp;#10;&amp;#10;if (outcometmp === riskyoption2) {&amp;#10;    feedbackRounded = &quot;$&quot; + Math.round(outcometmp)&amp;#10;} else {&amp;#10;    feedbackRounded = &quot;$&quot; + (Math.round(outcometmp*100)/100).toFixed(2)&amp;#10;    //feedbackRounded = &quot;$&quot; + Math.round(outcometmp*100)/100&amp;#10;}&amp;#10;&amp;#10;/*&amp;#10;console.log(&quot;outcome rounded:&quot;,feedbackRounded)&amp;#10;console.log(&quot;gain:&quot;,riskyoption1)&amp;#10;console.log(&quot;loss:&quot;,riskyoption2)&amp;#10;console.log(&quot;safe:&quot;,safeoption)&amp;#10;console.log(&quot;outcome:&quot;, outcometmp)&amp;#10;console.log(&quot;choice:&quot;, choicetmp)&amp;#10;console.log(&quot;extra iti:&quot;, extraITI)&amp;#10;console.log(&quot;rt&quot;, realChoice.rt)&amp;#10;console.log(&quot;actualITI&quot;, actualITI)&amp;#10;console.log(&quot;init ITI&quot;, initITIstatic[staticRDM.thisN])&amp;#10;*/&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;outcomes&quot;, outcometmp);&amp;#10;psychoJS.experiment.addData(&quot;choices&quot;, choicetmp);&amp;#10;psychoJS.experiment.addData(&quot;extraITI&quot;, extraITI);&amp;#10;psychoJS.experiment.addData(&quot;actualITI&quot;,actualITI)&amp;#10;psychoJS.experiment.addData(&quot;init ITI&quot;, initITIstatic[staticRDM.thisN])&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Presentation of Outcomes&amp;#10;import random&amp;#10;import math&amp;#10;if not realChoiceResp.keys:&amp;#10;    outcometmp = math.nan&amp;#10;    choicetmp = math.nan&amp;#10;    riskyLossReal = math.nan&amp;#10;    riskyGainReal = math.nan&amp;#10;    certain = math.nan&amp;#10;    noRespLoc = [0,0]&amp;#10;    ocLoc = [5,5]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = [5,5]&amp;#10;    hideGamLoc = [5,5]&amp;#10;    extraITI = 0&amp;#10;elif realChoiceResp.keys == 'v' and loc == 1:&amp;#10;    outcometmp = random.choice([riskyoption1, riskyoption2])&amp;#10;    choicetmp = 1&amp;#10;    extraITI = 4-realChoiceResp.rt&amp;#10;    riskyLossReal = riskyoption2&amp;#10;    riskyGainReal = riskyoption1&amp;#10;    certain = safeoption&amp;#10;    if outcometmp == riskyoption1:&amp;#10;        ocLoc = [-.35,.1]&amp;#10;        ocGambleLoc = [-.35,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        noRespLoc = [5,5]&amp;#10;        hideGamLoc = [-.35,-.15]&amp;#10;    elif outcometmp == riskyoption2:&amp;#10;         ocLoc = [-.35,-.1]&amp;#10;         ocGambleLoc = [-.35,0]&amp;#10;         ocSafeLoc = [5,5]&amp;#10;         hideGamLoc = [-.35,.15]&amp;#10;         noRespLoc = [5,5]&amp;#10;elif realChoiceResp.keys == 'v' and loc == 2:&amp;#10;    outcometmp = safeoption&amp;#10;    choicetmp = 0&amp;#10;    extraITI = 4-realChoiceResp.rt&amp;#10;    riskyLossReal = riskyoption2&amp;#10;    riskyGainReal = riskyoption1&amp;#10;    certain = safeoption&amp;#10;    ocLoc = [-.35,0]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = ocLoc&amp;#10;    hideGamLoc = ocGambleLoc&amp;#10;    noRespLoc = [5,5]&amp;#10;elif realChoiceResp.keys == 'n' and loc ==1:&amp;#10;    outcometmp = safeoption&amp;#10;    choicetmp = 0&amp;#10;    extraITI = 4-realChoiceResp.rt&amp;#10;    riskyLossReal = riskyoption2&amp;#10;    riskyGainReal = riskyoption1&amp;#10;    certain = safeoption&amp;#10;    ocLoc = [.35,0]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = ocLoc&amp;#10;    hideGamLoc = ocGambleLoc&amp;#10;    noRespLoc = [5,5]&amp;#10;elif realChoiceResp.keys == 'n' and loc ==2:&amp;#10;    outcometmp = random.choice([riskyoption1, riskyoption2])&amp;#10;    choicetmp = 1&amp;#10;    extraITI = 4-realChoiceResp.rt&amp;#10;    riskyLossReal = riskyoption2&amp;#10;    riskyGainReal = riskyoption1&amp;#10;    certain = safeoption&amp;#10;    if outcometmp == riskyoption1:&amp;#10;        ocLoc = [.35,.1]&amp;#10;        ocGambleLoc = [.35,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        hideGamLoc = [.35,-.15]&amp;#10;        noRespLoc = [5,5]&amp;#10;    elif outcometmp == riskyoption2:&amp;#10;        ocLoc = [.35,-.1]&amp;#10;        ocGambleLoc = [.35,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        hideGamLoc = [.35,.15]&amp;#10;        noRespLoc = [5,5]&amp;#10;&amp;#10;actualITI = initITIstatic[staticTrials.thisN] #+ extraITI&amp;#10;&amp;#10;if outcometmp == riskyoption2:&amp;#10;    feedbackRounded = &quot;$%.0f&quot; % round(outcometmp,0)&amp;#10;else:&amp;#10;    feedbackRounded = &quot;$%.2f&quot; % round(outcometmp,2)&amp;#10;&amp;#10;outcomes.append(outcometmp)&amp;#10;choices.append(choicetmp)&amp;#10;riskyloss_values.append(riskyLossReal)&amp;#10;riskygain_values.append(riskyGainReal)&amp;#10;certain_values.append(certain)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="outcomes.push(outcometmp);&amp;#10;choices.push(choicetmp);&amp;#10;//riskyloss_values.push(riskyLossReal);&amp;#10;//riskygain_values.push(riskyGainReal);&amp;#10;//certain_values.push(certain);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('outcomes', outcometmp)&amp;#10;thisExp.addData('choices', choicetmp)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="statOCcode" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="statNoRespTxt">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$NoRespFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="NoRespTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="statNoRespTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="noRespLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You did not respond in time&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="statRiskOC">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color2" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color2" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="statRiskOC" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocGambleLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="circLeft" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="leftShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="statSafeOC">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color2" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color2" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="statSafeOC" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocSafeLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="circRight" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="rightShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="statOCtxt">
        <Param val="$color1" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$ocFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="ocTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="statOCtxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$feedbackRounded" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="statHideRisk">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color1" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color1" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="statHideRisk" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="hideGamLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="riskHide" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="hideShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="dynaOutcome">
      <CodeComponent name="dynaOCcode">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="riskygain_values = []&amp;#10;riskyloss_values = []&amp;#10;certain_values = []&amp;#10;choices = []&amp;#10;outcomes = []&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="choices= []&amp;#10;outcomes = []&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var choicetmp, feedbackRounded, outcometmp, outcomes, choices;&amp;#10;&amp;#10;&amp;#10;function random_item(items){ &amp;#10;    return items[Math.floor(Math.random()*items.length)]; &amp;#10;}&amp;#10;&amp;#10;if (realChoiceResp.keys === undefined) {&amp;#10;    outcometmp = Math.nan;&amp;#10;    choicetmp = Math.nan;&amp;#10;    noRespLoc = [0, 0];&amp;#10;    ocLoc = [5, 5];&amp;#10;    ocGambleLoc = [5, 5];&amp;#10;    ocSafeLoc = [5, 5];&amp;#10;    hideGamLoc = [5, 5];&amp;#10;    extraITI = 0;&amp;#10;} else if (realChoiceResp.keys === &quot;v&quot; &amp;&amp; realloc === 1) {&amp;#10;     outcometmp = random_item([riskyoption1, riskyoption2]);&amp;#10;     choicetmp = 1;&amp;#10;     extraITI = 4-realChoiceResp.rt&amp;#10;     if (outcometmp === riskyoption1) {&amp;#10;          ocLoc = [(- 0.35), 0.1];&amp;#10;          ocGambleLoc = [(- 0.35), 0];&amp;#10;          ocSafeLoc = [5, 5];&amp;#10;          noRespLoc = [5, 5];&amp;#10;          hideGamLoc = [(- 0.35), (- 0.125)];&amp;#10;     } else if (outcometmp === riskyoption2) {&amp;#10;          ocLoc = [(- 0.35), (- 0.1)];&amp;#10;          ocGambleLoc = [(- 0.35), 0];&amp;#10;          ocSafeLoc = [5, 5];&amp;#10;          hideGamLoc = [(- 0.35), 0.125];&amp;#10;          noRespLoc = [5, 5];&amp;#10;     }&amp;#10; } else if (realChoiceResp.keys === &quot;v&quot; &amp;&amp; realloc === 2) {&amp;#10;     outcometmp = safeoption;&amp;#10;     choicetmp = 0;&amp;#10;     extraITI = 4-realChoice.rt&amp;#10;     ocLoc = [(- 0.35), 0];&amp;#10;     ocGambleLoc = [5, 5];&amp;#10;     ocSafeLoc = ocLoc;&amp;#10;     hideGamLoc = ocGambleLoc;&amp;#10;     noRespLoc = [5, 5];&amp;#10; } else if (realChoiceResp.keys === &quot;n&quot; &amp;&amp; realloc === 1) {&amp;#10;     outcometmp = safeoption;&amp;#10;     choicetmp = 0;&amp;#10;     extraITI = 4-realChoiceResp.rt&amp;#10;     ocLoc = [0.35, 0];&amp;#10;     ocGambleLoc = [5, 5];&amp;#10;     ocSafeLoc = ocLoc;&amp;#10;     hideGamLoc = ocGambleLoc;&amp;#10;     noRespLoc = [5, 5];&amp;#10;} else if (realChoiceResp.keys === &quot;n&quot; &amp;&amp; realloc === 2) {&amp;#10;    outcometmp = random_item([riskyoption1, riskyoption2]);&amp;#10;    choicetmp = 1;&amp;#10;    extraITI = 4-realChoiceResp.rt&amp;#10;    if (outcometmp === riskyoption1) {&amp;#10;        ocLoc = [0.35, 0.1];&amp;#10;        ocGambleLoc = [0.35, 0];&amp;#10;        ocSafeLoc = [5, 5];&amp;#10;        hideGamLoc = [0.35, (- 0.125)];&amp;#10;        noRespLoc = [5, 5];&amp;#10;    } else if (outcometmp === riskyoption2) {&amp;#10;        ocLoc = [0.35, (- 0.1)];&amp;#10;        ocGambleLoc = [0.35, 0];&amp;#10;        ocSafeLoc = [5, 5];&amp;#10;        hideGamLoc = [0.35, 0.125];&amp;#10;        noRespLoc = [5, 5];&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;actualITI = initITIdynamic[dynamicTrials.thisN] + extraITI&amp;#10;&amp;#10;&amp;#10;if (outcometmp === riskyoption2) {&amp;#10;    feedbackRounded = &quot;$&quot; + Math.round(outcometmp)&amp;#10;} else {&amp;#10;    feedbackRounded = &quot;$&quot; + (Math.round(outcometmp*100)/100).toFixed(2)&amp;#10;    //feedbackRounded = &quot;$&quot; + Math.round(outcometmp*100)/100&amp;#10;}&amp;#10;&amp;#10;/*&amp;#10;console.log(&quot;gain:&quot;,riskyoption1)&amp;#10;console.log(&quot;loss:&quot;,riskyoption2)&amp;#10;console.log(&quot;safe:&quot;,safeoption)&amp;#10;console.log(&quot;outcome:&quot;, outcometmp)&amp;#10;console.log(&quot;choice:&quot;, choicetmp)&amp;#10;console.log(&quot;extra iti:&quot;, extraITI)&amp;#10;console.log(&quot;rt&quot;, realChoice.rt)&amp;#10;console.log(&quot;actualITI&quot;, actualITI)&amp;#10;console.log(&quot;init ITI&quot;, initITIdynamic[dynamicRDM.thisN])&amp;#10;*/&amp;#10;&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;outcomes&quot;, outcometmp);&amp;#10;psychoJS.experiment.addData(&quot;choices&quot;, choicetmp);&amp;#10;psychoJS.experiment.addData(&quot;extraITI&quot;, extraITI);&amp;#10;psychoJS.experiment.addData(&quot;actualITI&quot;,actualITI)&amp;#10;psychoJS.experiment.addData(&quot;init ITI&quot;, initITIdynamic[dynamicRDM.thisN])&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random&amp;#10;import math&amp;#10;if not realChoiceResp.keys:&amp;#10;    outcometmp = math.nan&amp;#10;    choicetmp = math.nan&amp;#10;    riskyLossReal = math.nan&amp;#10;    riskyGainReal = math.nan&amp;#10;    certain = math.nan&amp;#10;    noRespLoc = [0,0]&amp;#10;    ocLoc = [5,5]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = [5,5]&amp;#10;    hideGamLoc = [5,5]&amp;#10;    extraITI = 0&amp;#10;elif realChoiceResp.keys == 'v' and loc == 1:&amp;#10;    outcometmp = random.choice([riskyoption1, riskyoption2])&amp;#10;    choicetmp = 1&amp;#10;    extraITI = 4-realChoiceResp.rt&amp;#10;    riskyLossReal = riskyoption2&amp;#10;    riskyGainReal = riskyoption1&amp;#10;    certain = safeoption&amp;#10;    if outcometmp == riskyoption1:&amp;#10;        ocLoc = [-.35,.1]&amp;#10;        ocGambleLoc = [-.35,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        noRespLoc = [5,5]&amp;#10;        hideGamLoc = [-.35,-.15]&amp;#10;    elif outcometmp == riskyoption2:&amp;#10;         ocLoc = [-.35,-.1]&amp;#10;         ocGambleLoc = [-.35,0]&amp;#10;         ocSafeLoc = [5,5]&amp;#10;         hideGamLoc = [-.35,.15]&amp;#10;         noRespLoc = [5,5]&amp;#10;elif realChoiceResp.keys == 'v' and loc == 2:&amp;#10;    outcometmp = safeoption&amp;#10;    choicetmp = 0&amp;#10;    extraITI = 4-realChoiceResp.rt&amp;#10;    riskyLossReal = riskyoption2&amp;#10;    riskyGainReal = riskyoption1&amp;#10;    certain = safeoption&amp;#10;    ocLoc = [-.35,0]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = ocLoc&amp;#10;    hideGamLoc = ocGambleLoc&amp;#10;    noRespLoc = [5,5]&amp;#10;elif realChoiceResp.keys == 'n' and loc ==1:&amp;#10;    outcometmp = safeoption&amp;#10;    choicetmp = 0&amp;#10;    extraITI = 4-realChoiceResp.rt&amp;#10;    riskyLossReal = riskyoption2&amp;#10;    riskyGainReal = riskyoption1&amp;#10;    certain = safeoption&amp;#10;    ocLoc = [.35,0]&amp;#10;    ocGambleLoc = [5,5]&amp;#10;    ocSafeLoc = ocLoc&amp;#10;    hideGamLoc = ocGambleLoc&amp;#10;    noRespLoc = [5,5]&amp;#10;elif realChoiceResp.keys == 'n' and loc ==2:&amp;#10;    outcometmp = random.choice([riskyoption1, riskyoption2])&amp;#10;    choicetmp = 1&amp;#10;    extraITI = 4-realChoiceResp.rt&amp;#10;    riskyLossReal = riskyoption2&amp;#10;    riskyGainReal = riskyoption1&amp;#10;    certain = safeoption&amp;#10;    if outcometmp == riskyoption1:&amp;#10;        ocLoc = [.35,.1]&amp;#10;        ocGambleLoc = [.35,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        hideGamLoc = [.35,-.15]&amp;#10;        noRespLoc = [5,5]&amp;#10;    elif outcometmp == riskyoption2:&amp;#10;        ocLoc = [.35,-.1]&amp;#10;        ocGambleLoc = [.35,0]&amp;#10;        ocSafeLoc = [5,5]&amp;#10;        hideGamLoc = [.35,.15]&amp;#10;        noRespLoc = [5,5]&amp;#10;&amp;#10;actualITI = initITIdynamic[dynamicTrials.thisN] #+ extraITI&amp;#10;&amp;#10;if outcometmp == riskyoption2:&amp;#10;    feedbackRounded = &quot;$%.0f&quot; % round(outcometmp,0)&amp;#10;else:&amp;#10;    feedbackRounded = &quot;$%.2f&quot; % round(outcometmp,2)&amp;#10;&amp;#10;outcomes.append(outcometmp)&amp;#10;choices.append(choicetmp)&amp;#10;riskyloss_values.append(riskyLossReal)&amp;#10;riskygain_values.append(riskyGainReal)&amp;#10;certain_values.append(certain)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="outcomes.push(outcometmp);&amp;#10;choices.push(choicetmp);&amp;#10;//riskyloss_values.push(riskyLossReal);&amp;#10;//riskygain_values.push(riskyGainReal);&amp;#10;//certain_values.push(certain);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('outcomes', outcometmp)&amp;#10;thisExp.addData('choices', choicetmp)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="dynaOCcode" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="dynaNoRespTxt">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$NoRespFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="NoRespTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="dynaNoRespTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="noRespLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You did not respond in time&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="dynaRiskOC">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color2" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color2" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="dynaRiskOC" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocGambleLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="circLeft" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="leftShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="dynaSafeOC">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color2" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color2" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="130" valType="int" updates="constant" name="nVertices"/>
        <Param val="dynaSafeOC" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocSafeLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="circRight" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="rightShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="dynaOCtxt">
        <Param val="$color1" valType="str" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$ocFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="ocTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="dynaOCtxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="ocLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$feedbackRounded" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="dynaHideRisk">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color1" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$color1" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="dynaHideRisk" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="hideGamLoc" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="custom polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="riskHide" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="hideShape" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="practiceStart">
      <TextComponent name="pracStartTxt">
        <Param val="$color2" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="$instructionsFont" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="instructionsTextHeight" valType="code" updates="constant" name="letterHeight"/>
        <Param val="pracStartTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="instructLoc" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="There will now be 5 practice trials.&amp;#10;&amp;#10;When you are ready to begin the practice, press &quot;V&quot; or &quot;N&quot;." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="wrap" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="pracStartResp">
        <Param val="'v','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="pracStartResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="cgeRDMsetup">
      <CodeComponent name="cgeRDMsetupCode">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="psychoJS.start({&amp;#10;  expName,&amp;#10;  expInfo,&amp;#10;  resources: [&amp;#10;    // relative path to index.html&amp;#10;    { name: 'digitSpanTrialNumber.xlsx', path: 'digitSpanTrialNumber.xlsx' },&amp;#10;    { name: 'CGT-choice-set.csv', path: 'CGT-choice-set.csv' },&amp;#10;    { name: 'cgtRDMPractice.xlsx', path: 'cgtRDMPractice.xlsx' },&amp;#10;    { name: 'continue.png', path: 'continue.png' },&amp;#10;    { name: 'digitSpanPractice.xlsx', path: 'digitSpanPractice.xlsx' },&amp;#10;    // absolute path:&amp;#10;    //{ name: 'trialTypes_B.xls', path: 'http://a.website.org/a.path/trialTypes_B.xls' }&amp;#10;  ]&amp;#10;});" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="### Real or Practice&amp;#10;isReal = 0&amp;#10;isHide = 0&amp;#10;&amp;#10;### Isoluminant Colors Used &amp;#10;color1 = [0.5216,0.5216,0.5216]&amp;#10;color2 = [-0.0667,0.6392,1]&amp;#10;# BLUE ### Choice Shape; V, N, and OR text&amp;#10;# PsychoPy RGB -1:1 [-0.0667,0.6392,1] # RGB 0:255 [119,209,205]&amp;#10;# GREY ### Background; Choice Line&amp;#10;# psychopy RGB -1:1 [0.5216,0.5216,0.5216] # RGB 0:255 [194,194,194] &amp;#10;&amp;#10;### Text Fonts&amp;#10;instructionsFont = 'Arial'&amp;#10;choiceFont = 'Arial'&amp;#10;choiceValueFont = 'Arial'&amp;#10;fixCrossFont = 'Arial'&amp;#10;NoRespFont = 'Arial'&amp;#10;ocFont = 'Arial'&amp;#10;trialNumFont = 'Arial'&amp;#10;&amp;#10;### Text Dimensions&amp;#10;wrap = 1.5&amp;#10;instructionsTextHeight = .05&amp;#10;choiceTextHeight = .05&amp;#10;choiceValuesTextHeight = .1&amp;#10;FixCrossHeight = .05&amp;#10;NoRespTextHeight = .08&amp;#10;ocTextHeight = .1&amp;#10;trialNumHeight = .1&amp;#10;&amp;#10;### Instructions Location&amp;#10;instructLoc = [0,0]&amp;#10;&amp;#10;### Shapes 'circle' 'rectangle' 'star.7' etc.&amp;#10;leftShape = 'circle'&amp;#10;rightShape = 'circle'&amp;#10;riskShape = 'rectangle'&amp;#10;hideShape = 'rectangle'&amp;#10;&amp;#10;### Shape Dimensions&amp;#10;circLeft = [.5,.5]&amp;#10;circRight = [.5,.5]&amp;#10;riskLine = [.5,.01]&amp;#10;riskHide = [.6,.3]&amp;#10;&amp;#10;### Fixed Trial Locations&amp;#10;circLeftLoc=[-.35,0]&amp;#10;circRightLoc=[.35,0]&amp;#10;ORtextLoc=[0,0]&amp;#10;VleftLoc=[-.35,-.35]&amp;#10;NrightLoc=[.35,-.35]&amp;#10;fixCrossLoc=[0,0]&amp;#10;trialNumLoc=[0,-.35]&amp;#10;&amp;#10;### Number of Trials per Choice Sets&amp;#10;if isReal == 1:&amp;#10;    pracChoices = '0:5'&amp;#10;    statChoices = '0:50'&amp;#10;    dynaChoices = '0:120'&amp;#10;else:&amp;#10;    # 3 trials to choose: A risky, A safe, and A no respond&amp;#10;    pracChoices = '0:3'&amp;#10;    statChoices = '0:3'&amp;#10;    dynaChoices = '0:3'&amp;#10;    &amp;#10;### Trial Number Appearance &amp;#10;if isHide == 1:&amp;#10;    trialNumColor = [0.5216,0.5216,0.5216]&amp;#10;else:&amp;#10;    trialNumColor = [-0.0667,0.6392,1]&amp;#10;&amp;#10;### ITIs&amp;#10;initITIstatic = []&amp;#10;initITIdynamic = []&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="instructionsTextHeight = 0.05;&amp;#10;lettersTextHeight = 0.1;&amp;#10;wrap = 1.5;&amp;#10;&amp;#10;var initITIstatic&amp;#10;var initITIdynamic&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="function shuffle(array) {&amp;#10;  let currentIndex = array.length,  randomIndex;&amp;#10;&amp;#10;  // While there remain elements to shuffle.&amp;#10;  while (currentIndex != 0) {&amp;#10;&amp;#10;    // Pick a remaining element.&amp;#10;    randomIndex = Math.floor(Math.random() * currentIndex);&amp;#10;    currentIndex--;&amp;#10;&amp;#10;    // And swap it with the current element.&amp;#10;    [array[currentIndex], array[randomIndex]] = [&amp;#10;      array[randomIndex], array[currentIndex]];&amp;#10;  }&amp;#10;&amp;#10;  return array;&amp;#10;}&amp;#10;&amp;#10;// initialize ITIs&amp;#10;initITIstatic = Array(25).fill([1, 1.5]).flat();&amp;#10;initITIdynamic = Array(60).fill([1, 1.5]).flat();&amp;#10;&amp;#10;// shuffle the ITIs using the function above&amp;#10;initITIstatic = shuffle(initITIstatic);&amp;#10;initITIdynamic = shuffle(initITIdynamic);&amp;#10;&amp;#10;// save the ITIs&amp;#10;psychoJS.experiment.addData('initITIstatic', initITIstatic)&amp;#10;psychoJS.experiment.addData('initITIdynamic', initITIdynamic)&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Getting random module&amp;#10;import random&amp;#10;&amp;#10;# Define the shuffle function (equivalent to the JavaScript version)&amp;#10;def shuffle(array):&amp;#10;    currentIndex = len(array)&amp;#10;    while currentIndex != 0:&amp;#10;        randomIndex = random.randint(0, currentIndex - 1)&amp;#10;        currentIndex -= 1&amp;#10;        array[currentIndex], array[randomIndex] = array[randomIndex], array[currentIndex]&amp;#10;&amp;#10;# Initialize ITIs&amp;#10;initITIstatic = [3, 3.5] * 25 #1, 1.5&amp;#10;initITIdynamic = [3, 3.5] * 60 #1, 1.5&amp;#10;&amp;#10;# Shuffle the ITIs using the shuffle function&amp;#10;shuffle(initITIstatic)&amp;#10;shuffle(initITIdynamic)&amp;#10;&amp;#10;# Save the ITIs as experiment data&amp;#10;thisExp.addData('initITIstatic', initITIstatic)&amp;#10;thisExp.addData('initITIdynamic', initITIdynamic)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="cgeRDMsetupCode" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="cgeRDMsetup"/>
    <Routine name="cgeRDMstart"/>
    <Routine name="practiceStart"/>
    <LoopInitiator loopType="TrialHandler" name="practiceTrials">
      <Param name="Selected rows" updates="None" val="$pracChoices" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="cgeRDMPractice.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="practiceTrials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="pracChoices"/>
    <Routine name="pracISI"/>
    <Routine name="pracOutcome"/>
    <Routine name="pracITI"/>
    <LoopTerminator name="practiceTrials"/>
    <Routine name="staticStart"/>
    <LoopInitiator loopType="TrialHandler" name="staticTrials">
      <Param name="Selected rows" updates="None" val="$statChoices" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('riskyoption1', 20.03), ('riskyoption2', 0.0), ('safeoption', 1.99), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 28.21), ('riskyoption2', 0.0), ('safeoption', 3.89), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 17.73), ('riskyoption2', 0.0), ('safeoption', 3.13), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 25.2), ('riskyoption2', 0.0), ('safeoption', 5.4), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 16.0), ('riskyoption2', 0.0), ('safeoption', 4.0), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 22.97), ('riskyoption2', 0.0), ('safeoption', 6.51), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 14.72), ('riskyoption2', 0.0), ('safeoption', 4.64), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 21.32), ('riskyoption2', 0.0), ('safeoption', 7.34), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 13.94), ('riskyoption2', 0.0), ('safeoption', 5.03), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 20.53), ('riskyoption2', 0.0), ('safeoption', 7.73), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 13.45), ('riskyoption2', 0.0), ('safeoption', 5.27), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 19.86), ('riskyoption2', 0.0), ('safeoption', 8.07), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 13.04), ('riskyoption2', 0.0), ('safeoption', 5.48), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 19.28), ('riskyoption2', 0.0), ('safeoption', 8.36), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 12.68), ('riskyoption2', 0.0), ('safeoption', 5.66), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 18.77), ('riskyoption2', 0.0), ('safeoption', 8.61), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 12.36), ('riskyoption2', 0.0), ('safeoption', 5.82), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 18.33), ('riskyoption2', 0.0), ('safeoption', 8.84), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 12.08), ('riskyoption2', 0.0), ('safeoption', 5.96), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 17.94), ('riskyoption2', 0.0), ('safeoption', 9.03), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 11.84), ('riskyoption2', 0.0), ('safeoption', 6.08), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 17.59), ('riskyoption2', 0.0), ('safeoption', 9.2), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 11.62), ('riskyoption2', 0.0), ('safeoption', 6.19), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 17.28), ('riskyoption2', 0.0), ('safeoption', 9.36), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 11.43), ('riskyoption2', 0.0), ('safeoption', 6.29), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 17.0), ('riskyoption2', 0.0), ('safeoption', 9.5), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 11.2), ('riskyoption2', 0.0), ('safeoption', 6.4), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 16.6), ('riskyoption2', 0.0), ('safeoption', 9.7), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 10.95), ('riskyoption2', 0.0), ('safeoption', 6.53), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 16.26), ('riskyoption2', 0.0), ('safeoption', 9.87), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 10.73), ('riskyoption2', 0.0), ('safeoption', 6.63), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 15.96), ('riskyoption2', 0.0), ('safeoption', 10.02), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 10.55), ('riskyoption2', 0.0), ('safeoption', 6.73), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 15.7), ('riskyoption2', 0.0), ('safeoption', 10.15), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 10.39), ('riskyoption2', 0.0), ('safeoption', 6.81), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 15.47), ('riskyoption2', 0.0), ('safeoption', 10.27), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 10.24), ('riskyoption2', 0.0), ('safeoption', 6.88), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 15.27), ('riskyoption2', 0.0), ('safeoption', 10.37), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 10.12), ('riskyoption2', 0.0), ('safeoption', 6.94), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 15.09), ('riskyoption2', 0.0), ('safeoption', 10.46), ('ischecktrial', 0)]), OrderedDict([('riskyoption1', 10.35), ('riskyoption2', 0.0), ('safeoption', 0.0), ('ischecktrial', 1)]), OrderedDict([('riskyoption1', 14.26), ('riskyoption2', 0.0), ('safeoption', 0.0), ('ischecktrial', 1)]), OrderedDict([('riskyoption1', 19.86), ('riskyoption2', 0.0), ('safeoption', 0.0), ('ischecktrial', 1)]), OrderedDict([('riskyoption1', 16.11), ('riskyoption2', 6.99), ('safeoption', 6.99), ('ischecktrial', 1)]), OrderedDict([('riskyoption1', 13.1), ('riskyoption2', 7.73), ('safeoption', 4.68), ('ischecktrial', 1)]), OrderedDict([('riskyoption1', 0.0), ('riskyoption2', 0.0), ('safeoption', 7.55), ('ischecktrial', 1)]), OrderedDict([('riskyoption1', 0.0), ('riskyoption2', 0.0), ('safeoption', 10.25), ('ischecktrial', 1)]), OrderedDict([('riskyoption1', 0.0), ('riskyoption2', 0.0), ('safeoption', 3.13), ('ischecktrial', 1)]), OrderedDict([('riskyoption1', 10.68), ('riskyoption2', 0.0), ('safeoption', 10.68), ('ischecktrial', 1)]), OrderedDict([('riskyoption1', 6.79), ('riskyoption2', 0.0), ('safeoption', 9.92), ('ischecktrial', 1)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="CGT-choice-set.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="staticTrials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="realChoices"/>
    <Routine name="realISI"/>
    <Routine name="statOutcome"/>
    <Routine name="realITI"/>
    <LoopTerminator name="staticTrials"/>
    <LoopInitiator loopType="TrialHandler" name="BestFit">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="BestFit" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="computeBestFit"/>
    <LoopTerminator name="BestFit"/>
    <Routine name="loadingDynamicChoices"/>
    <Routine name="dynamicStart"/>
    <LoopInitiator loopType="TrialHandler" name="dynamicTrials">
      <Param name="Selected rows" updates="None" val="$dynaChoices" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$fname[0]" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="dynamicTrials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="realChoices"/>
    <Routine name="realISI"/>
    <Routine name="dynaOutcome"/>
    <Routine name="realITI"/>
    <LoopTerminator name="dynamicTrials"/>
    <Routine name="cgeRDMend"/>
    <Routine name="END"/>
  </Flow>
</PsychoPy2experiment>
